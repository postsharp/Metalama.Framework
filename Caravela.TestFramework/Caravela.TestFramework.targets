<Project>
    <ItemGroup>
        <!-- Exclude *.t.cs from the main compilation -->
        <Compile Remove="$(MSBuildProjectDirectory)\**\*.t.cs" />
        <None Include="$(MSBuildProjectDirectory)\**\*.t.cs" />
        
    </ItemGroup>
    
    
    <!-- Exclude everything in the project except TestList.cs -->
    <ItemGroup Condition="'$(CaravelaTestAutoExclude)'!='False'">
        <Compile Remove="$(MSBuildProjectDirectory)\**\*.cs"  />
        <Compile Include="$(MSBuildProjectDirectory)\**\_Runner.cs" />
        <None Include="$(MSBuildProjectDirectory)\**\*.cs" />
        <None Remove="$(MSBuildProjectDirectory)\**\_Runner.cs" />
        <None Remove="$(MSBuildProjectDirectory)\obj\**\*.cs" />
        <None Remove="$(MSBuildProjectDirectory)\bin\**\*.cs" />
    </ItemGroup>
    
    
      <Target Name='WriteReferenceAssemblies' DependsOnTargets='FindReferenceAssembliesForReferences' AfterTargets="Build">
        <WriteLinesToFile File='$(IntermediateOutputPath)assemblies.txt' Overwrite='true' Lines='@(ReferencePathWithRefAssemblies)' />
      </Target>
      
      <Target Name="GenerateCaravelaTestDefaultRunner" BeforeTargets="CoreCompile" Condition="'$(CaravelaTestGenerateDefaultRunner)'=='True'">
        
         <PropertyGroup>
                <_DefaultRunner>
// This file is automatically generated.
// It implements the Rider/Resharper adapter with the Caravela testing framework.
// It defines a default test suite that will execute all tests found in the project.
// To disable the creation of this file, define the MSBUild property 'CaravelaTestGenerateDefaultRunner' to 'False'.
// You will have to add you own test suites by deriving from the TestSuite class.                  
                
using Caravela.TestFramework%3B
using Xunit%3B
using Xunit.Abstractions%3B

namespace $(RootNamespace)
{
    public class DefaultTestRunner : DefaultTestSuite
    {
        public DefaultTestRunner( ITestOutputHelper logger ) : base( logger ) {}
        
        [Theory]
        [CurrentProject]
        public void Tests( string f ) => this.RunTest( f )%3B
    }
}
                </_DefaultRunner>
              </PropertyGroup>
        
              <WriteLinesToFile
                File="$(IntermediateOutputPath)DefaultTestRunner.g.cs"
                Overwrite="true"
                Lines="$(_DefaultRunner)" />
                
               <ItemGroup>
               <Compile Include="$(IntermediateOutputPath)DefaultTestRunner.g.cs"/>
            </ItemGroup>
      
      </Target>
      
</Project>