<?xml version="1.0" encoding="utf-8"?>
<!-- This file is copied from the Roslyn source code. -->
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<!-- 
 To re-generate source from this file, run eng/generate-compiler-code.cmd
-->
<Tree Root="SyntaxNode">
  <PredefinedNode Name="CSharpSyntaxNode" Base="SyntaxNode" />
  <PredefinedNode Name="SyntaxToken" Base="CSharpSyntaxNode" />
  <PredefinedNode Name="StructuredTriviaSyntax" Base="CSharpSyntaxNode" />
  <!-- Names -->
  <AbstractNode Name="NameSyntax" Base="TypeSyntax" />
  <AbstractNode Name="SimpleNameSyntax" Base="NameSyntax">
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </AbstractNode>
  <Node Name="IdentifierNameSyntax" Base="SimpleNameSyntax">
    <Kind Name="IdentifierName" />
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
      <Kind Name="GlobalKeyword" />
    </Field>
  </Node>
  <Node Name="QualifiedNameSyntax" Base="NameSyntax">
    <Kind Name="QualifiedName" />
    <Field Name="Left" Type="NameSyntax" />
    <Field Name="DotToken" Type="SyntaxToken">
      <Kind Name="DotToken" />
    </Field>
    <Field Name="Right" Type="SimpleNameSyntax" />
  </Node>
  <Node Name="GenericNameSyntax" Base="SimpleNameSyntax">
    <Kind Name="GenericName" />
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeArgumentList" Type="TypeArgumentListSyntax" />
  </Node>
  <Node Name="TypeArgumentListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="TypeArgumentList" />
    <Field Name="LessThanToken" Type="SyntaxToken">
      <Kind Name="LessThanToken" />
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;TypeSyntax&gt;" />
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <Kind Name="GreaterThanToken" />
    </Field>
  </Node>
  <Node Name="AliasQualifiedNameSyntax" Base="NameSyntax">
    <Kind Name="AliasQualifiedName" />
    <Field Name="Alias" Type="IdentifierNameSyntax" />
    <Field Name="ColonColonToken" Type="SyntaxToken">
      <Kind Name="ColonColonToken" />
    </Field>
    <Field Name="Name" Type="SimpleNameSyntax" />
  </Node>
  <!-- Type names -->
  <AbstractNode Name="TypeSyntax" Base="ExpressionSyntax" />
  <Node Name="PredefinedTypeSyntax" Base="TypeSyntax">
    <Kind Name="PredefinedType" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="BoolKeyword" />
      <Kind Name="ByteKeyword" />
      <Kind Name="SByteKeyword" />
      <Kind Name="IntKeyword" />
      <Kind Name="UIntKeyword" />
      <Kind Name="ShortKeyword" />
      <Kind Name="UShortKeyword" />
      <Kind Name="LongKeyword" />
      <Kind Name="ULongKeyword" />
      <Kind Name="FloatKeyword" />
      <Kind Name="DoubleKeyword" />
      <Kind Name="DecimalKeyword" />
      <Kind Name="StringKeyword" />
      <Kind Name="CharKeyword" />
      <Kind Name="ObjectKeyword" />
      <Kind Name="VoidKeyword" />
    </Field>
  </Node>
  <Node Name="ArrayTypeSyntax" Base="TypeSyntax">
    <Kind Name="ArrayType" />
    <Field Name="ElementType" Type="TypeSyntax" />
    <Field Name="RankSpecifiers" Type="SyntaxList&lt;ArrayRankSpecifierSyntax&gt;" MinCount="1" />
  </Node>
  <Node Name="ArrayRankSpecifierSyntax" Base="CSharpSyntaxNode">
    <Kind Name="ArrayRankSpecifier" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Sizes" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <Node Name="PointerTypeSyntax" Base="TypeSyntax">
    <Kind Name="PointerType" />
    <Field Name="ElementType" Type="TypeSyntax" />
    <Field Name="AsteriskToken" Type="SyntaxToken">
      <Kind Name="AsteriskToken" />
    </Field>
  </Node>
  <Node Name="FunctionPointerTypeSyntax" Base="TypeSyntax">
    <Kind Name="FunctionPointerType" />
    <Field Name="DelegateKeyword" Type="SyntaxToken">
      <Kind Name="DelegateKeyword" />
    </Field>
    <Field Name="AsteriskToken" Type="SyntaxToken">
      <Kind Name="AsteriskToken" />
    </Field>
    <Field Name="CallingConvention" Type="FunctionPointerCallingConventionSyntax" Optional="true" />
    <Field Name="ParameterList" Type="FunctionPointerParameterListSyntax" />
  </Node>
  <Node Name="FunctionPointerParameterListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="FunctionPointerParameterList" />
    <Field Name="LessThanToken" Type="SyntaxToken">
      <Kind Name="LessThanToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;FunctionPointerParameterSyntax&gt;" MinCount="1" />
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <Kind Name="GreaterThanToken" />
    </Field>
  </Node>
  <Node Name="FunctionPointerCallingConventionSyntax" Base="CSharpSyntaxNode">
    <Kind Name="FunctionPointerCallingConvention" />
    <Field Name="ManagedOrUnmanagedKeyword" Type="SyntaxToken">
      <Kind Name="ManagedKeyword" />
      <Kind Name="UnmanagedKeyword" />
    </Field>
    <Field Name="UnmanagedCallingConventionList" Type="FunctionPointerUnmanagedCallingConventionListSyntax" Optional="true" />
  </Node>
  <Node Name="FunctionPointerUnmanagedCallingConventionListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="FunctionPointerUnmanagedCallingConventionList" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="CallingConventions" Type="SeparatedSyntaxList&lt;FunctionPointerUnmanagedCallingConventionSyntax&gt;" MinCount="1" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <Node Name="FunctionPointerUnmanagedCallingConventionSyntax" Base="CSharpSyntaxNode">
    <Kind Name="FunctionPointerUnmanagedCallingConvention" />
    <Field Name="Name" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <Node Name="NullableTypeSyntax" Base="TypeSyntax">
    <Kind Name="NullableType" />
    <Field Name="ElementType" Type="TypeSyntax" />
    <Field Name="QuestionToken" Type="SyntaxToken">
      <Kind Name="QuestionToken" />
    </Field>
  </Node>
  <Node Name="TupleTypeSyntax" Base="TypeSyntax">
    <Kind Name="TupleType" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Elements" Type="SeparatedSyntaxList&lt;TupleElementSyntax&gt;" MinCount="2" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="TupleElementSyntax" Base="CSharpSyntaxNode">
    <Kind Name="TupleElement" />
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Identifier" Type="SyntaxToken" Optional="true">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <Node Name="OmittedTypeArgumentSyntax" Base="TypeSyntax">
    <Kind Name="OmittedTypeArgument" />
    <Field Name="OmittedTypeArgumentToken" Type="SyntaxToken">
      <Kind Name="OmittedTypeArgumentToken" />
    </Field>
  </Node>
  <Node Name="RefTypeSyntax" Base="TypeSyntax">
    <Kind Name="RefType" />
    <Field Name="RefKeyword" Type="SyntaxToken">
      <Kind Name="RefKeyword" />
    </Field>
    <Field Name="ReadOnlyKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="ReadOnlyKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
  </Node>
  <!-- Expressions -->
  <AbstractNode Name="ExpressionOrPatternSyntax" Base="CSharpSyntaxNode" />
  <AbstractNode Name="ExpressionSyntax" Base="ExpressionOrPatternSyntax" />
  <Node Name="ParenthesizedExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ParenthesizedExpression" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="TupleExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TupleExpression" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;" MinCount="2" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="PrefixUnaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="UnaryPlusExpression" />
    <Kind Name="UnaryMinusExpression" />
    <Kind Name="BitwiseNotExpression" />
    <Kind Name="LogicalNotExpression" />
    <Kind Name="PreIncrementExpression" />
    <Kind Name="PreDecrementExpression" />
    <Kind Name="AddressOfExpression" />
    <Kind Name="PointerIndirectionExpression" />
    <Kind Name="IndexExpression" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="PlusToken" />
      <Kind Name="MinusToken" />
      <Kind Name="TildeToken" />
      <Kind Name="ExclamationToken" />
      <Kind Name="PlusPlusToken" />
      <Kind Name="MinusMinusToken" />
      <Kind Name="AmpersandToken" />
      <Kind Name="AsteriskToken" />
      <Kind Name="CaretToken" />"
            </Field>
    <Field Name="Operand" Type="ExpressionSyntax" />
  </Node>
  <Node Name="AwaitExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="AwaitExpression" />
    <Field Name="AwaitKeyword" Type="SyntaxToken">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="PostfixUnaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="PostIncrementExpression" />
    <Kind Name="PostDecrementExpression" />
    <Kind Name="SuppressNullableWarningExpression" />
    <Field Name="Operand" Type="ExpressionSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="PlusPlusToken" />
      <Kind Name="MinusMinusToken" />
      <Kind Name="ExclamationToken" />
    </Field>
  </Node>
  <Node Name="MemberAccessExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="SimpleMemberAccessExpression" />
    <Kind Name="PointerMemberAccessExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="DotToken" />
      <Kind Name="MinusGreaterThanToken" />
    </Field>
    <Field Name="Name" Type="SimpleNameSyntax" />
  </Node>
  <Node Name="ConditionalAccessExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ConditionalAccessExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="QuestionToken" />
    </Field>
    <Field Name="WhenNotNull" Type="ExpressionSyntax" />
  </Node>
  <Node Name="MemberBindingExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="MemberBindingExpression" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="DotToken" />
    </Field>
    <Field Name="Name" Type="SimpleNameSyntax" />
  </Node>
  <Node Name="ElementBindingExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ElementBindingExpression" />
    <Field Name="ArgumentList" Type="BracketedArgumentListSyntax" />
  </Node>
  <Node Name="RangeExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="RangeExpression" />
    <Field Name="LeftOperand" Type="ExpressionSyntax" Optional="true" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="DotDotToken" />
    </Field>
    <Field Name="RightOperand" Type="ExpressionSyntax" Optional="true" />
  </Node>
  <Node Name="ImplicitElementAccessSyntax" Base="ExpressionSyntax">
    <Kind Name="ImplicitElementAccess" />
    <Field Name="ArgumentList" Type="BracketedArgumentListSyntax" />
  </Node>
  <Node Name="BinaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="AddExpression" />
    <Kind Name="SubtractExpression" />
    <Kind Name="MultiplyExpression" />
    <Kind Name="DivideExpression" />
    <Kind Name="ModuloExpression" />
    <Kind Name="LeftShiftExpression" />
    <Kind Name="RightShiftExpression" />
    <Kind Name="LogicalOrExpression" />
    <Kind Name="LogicalAndExpression" />
    <Kind Name="BitwiseOrExpression" />
    <Kind Name="BitwiseAndExpression" />
    <Kind Name="ExclusiveOrExpression" />
    <Kind Name="EqualsExpression" />
    <Kind Name="NotEqualsExpression" />
    <Kind Name="LessThanExpression" />
    <Kind Name="LessThanOrEqualExpression" />
    <Kind Name="GreaterThanExpression" />
    <Kind Name="GreaterThanOrEqualExpression" />
    <Kind Name="IsExpression" />
    <Kind Name="AsExpression" />
    <Kind Name="CoalesceExpression" />
    <Field Name="Left" Type="ExpressionSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="PlusToken" />
      <Kind Name="MinusToken" />
      <Kind Name="AsteriskToken" />
      <Kind Name="SlashToken" />
      <Kind Name="PercentToken" />
      <Kind Name="LessThanLessThanToken" />
      <Kind Name="GreaterThanGreaterThanToken" />
      <Kind Name="BarBarToken" />
      <Kind Name="AmpersandAmpersandToken" />
      <Kind Name="BarToken" />
      <Kind Name="AmpersandToken" />
      <Kind Name="CaretToken" />
      <Kind Name="EqualsEqualsToken" />
      <Kind Name="ExclamationEqualsToken" />
      <Kind Name="LessThanToken" />
      <Kind Name="LessThanEqualsToken" />
      <Kind Name="GreaterThanToken" />
      <Kind Name="GreaterThanEqualsToken" />
      <Kind Name="IsKeyword" />
      <Kind Name="AsKeyword" />
      <Kind Name="QuestionQuestionToken" />
    </Field>
    <Field Name="Right" Type="ExpressionSyntax" />
  </Node>
  <Node Name="AssignmentExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="SimpleAssignmentExpression" />
    <Kind Name="AddAssignmentExpression" />
    <Kind Name="SubtractAssignmentExpression" />
    <Kind Name="MultiplyAssignmentExpression" />
    <Kind Name="DivideAssignmentExpression" />
    <Kind Name="ModuloAssignmentExpression" />
    <Kind Name="AndAssignmentExpression" />
    <Kind Name="ExclusiveOrAssignmentExpression" />
    <Kind Name="OrAssignmentExpression" />
    <Kind Name="LeftShiftAssignmentExpression" />
    <Kind Name="RightShiftAssignmentExpression" />
    <Kind Name="CoalesceAssignmentExpression" />
    <Field Name="Left" Type="ExpressionSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="EqualsToken" />
      <Kind Name="PlusEqualsToken" />
      <Kind Name="MinusEqualsToken" />
      <Kind Name="AsteriskEqualsToken" />
      <Kind Name="SlashEqualsToken" />
      <Kind Name="PercentEqualsToken" />
      <Kind Name="AmpersandEqualsToken" />
      <Kind Name="CaretEqualsToken" />
      <Kind Name="BarEqualsToken" />
      <Kind Name="LessThanLessThanEqualsToken" />
      <Kind Name="GreaterThanGreaterThanEqualsToken" />
      <Kind Name="QuestionQuestionEqualsToken" />
    </Field>
    <Field Name="Right" Type="ExpressionSyntax" />
  </Node>
  <Node Name="ConditionalExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ConditionalExpression" />
    <Field Name="Condition" Type="ExpressionSyntax" />
    <Field Name="QuestionToken" Type="SyntaxToken">
      <Kind Name="QuestionToken" />
    </Field>
    <Field Name="WhenTrue" Type="ExpressionSyntax" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
    <Field Name="WhenFalse" Type="ExpressionSyntax" />
  </Node>
  <AbstractNode Name="InstanceExpressionSyntax" Base="ExpressionSyntax" />
  <Node Name="ThisExpressionSyntax" Base="InstanceExpressionSyntax">
    <Kind Name="ThisExpression" />
    <Field Name="Token" Type="SyntaxToken">
      <Kind Name="ThisKeyword" />
    </Field>
  </Node>
  <Node Name="BaseExpressionSyntax" Base="InstanceExpressionSyntax">
    <Kind Name="BaseExpression" />
    <Field Name="Token" Type="SyntaxToken">
      <Kind Name="BaseKeyword" />
    </Field>
  </Node>
  <Node Name="LiteralExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ArgListExpression" />
    <Kind Name="NumericLiteralExpression" />
    <Kind Name="StringLiteralExpression" />
    <Kind Name="CharacterLiteralExpression" />
    <Kind Name="TrueLiteralExpression" />
    <Kind Name="FalseLiteralExpression" />
    <Kind Name="NullLiteralExpression" />
    <Kind Name="DefaultLiteralExpression" />
    <Field Name="Token" Type="SyntaxToken">
      <Kind Name="ArgListKeyword" />
      <Kind Name="NumericLiteralToken" />
      <Kind Name="StringLiteralToken" />
      <Kind Name="CharacterLiteralToken" />
      <Kind Name="TrueKeyword" />
      <Kind Name="FalseKeyword" />
      <Kind Name="NullKeyword" />
      <Kind Name="DefaultKeyword" />
    </Field>
  </Node>
  <Node Name="MakeRefExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="MakeRefExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="MakeRefKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="RefTypeExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="RefTypeExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="RefTypeKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="RefValueExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="RefValueExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="RefValueKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="Comma" Type="SyntaxToken">
      <Kind Name="CommaToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="CheckedExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CheckedExpression" />
    <Kind Name="UncheckedExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="CheckedKeyword" />
      <Kind Name="UncheckedKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="DefaultExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="DefaultExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="DefaultKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="TypeOfExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TypeOfExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="TypeOfKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="SizeOfExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="SizeOfExpression" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="SizeOfKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="InvocationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="InvocationExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="ArgumentList" Type="ArgumentListSyntax" />
  </Node>
  <Node Name="ElementAccessExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ElementAccessExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="ArgumentList" Type="BracketedArgumentListSyntax" />
  </Node>
  <AbstractNode Name="BaseArgumentListSyntax" Base="CSharpSyntaxNode">
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;" />
  </AbstractNode>
  <Node Name="ArgumentListSyntax" Base="BaseArgumentListSyntax">
    <Kind Name="ArgumentList" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;" Override="true" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="BracketedArgumentListSyntax" Base="BaseArgumentListSyntax">
    <Kind Name="BracketedArgumentList" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;" Override="true" MinCount="1" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <Node Name="ArgumentSyntax" Base="CSharpSyntaxNode">
    <Kind Name="Argument" />
    <Field Name="NameColon" Type="NameColonSyntax" Optional="true" />
    <Field Name="RefKindKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="RefKeyword" />
      <Kind Name="OutKeyword" />
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <AbstractNode Name="BaseExpressionColonSyntax" Base="CSharpSyntaxNode">
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
  </AbstractNode>
  <Node Name="ExpressionColonSyntax" Base="BaseExpressionColonSyntax">
    <Kind Name="ExpressionColon" />
    <Field Name="Expression" Type="ExpressionSyntax" Override="true" />
    <Field Name="ColonToken" Type="SyntaxToken" Override="true" />
  </Node>
  <Node Name="NameColonSyntax" Base="BaseExpressionColonSyntax">
    <Kind Name="NameColon" />
    <Field Name="Name" Type="IdentifierNameSyntax">
      <Kind Name="IdentifierName" />
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken" Override="true" />
  </Node>
  <Node Name="DeclarationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="DeclarationExpression" />
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Designation" Type="VariableDesignationSyntax" />
  </Node>
  <Node Name="CastExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CastExpression" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <AbstractNode Name="AnonymousFunctionExpressionSyntax" Base="ExpressionSyntax">
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Choice>
      <Field Name="Block" Type="BlockSyntax" />
      <Field Name="ExpressionBody" Type="ExpressionSyntax" />
    </Choice>
  </AbstractNode>
  <Node Name="AnonymousMethodExpressionSyntax" Base="AnonymousFunctionExpressionSyntax" SkipConvenienceFactories="true">
    <Kind Name="AnonymousMethodExpression" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="DelegateKeyword" Type="SyntaxToken">
      <Kind Name="DelegateKeyword" />
    </Field>
    <Field Name="ParameterList" Type="ParameterListSyntax" Optional="true" />
    <Field Name="Block" Type="BlockSyntax" Override="true" />
    <Field Name="ExpressionBody" Type="ExpressionSyntax" Optional="true" Override="true" />
  </Node>
  <AbstractNode Name="LambdaExpressionSyntax" Base="AnonymousFunctionExpressionSyntax">
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="ArrowToken" Type="SyntaxToken">
      <!-- should be EqualsGreaterThanToken -->
      <Kind Name="EqualsGreaterThanToken" />
    </Field>
  </AbstractNode>
  <Node Name="SimpleLambdaExpressionSyntax" Base="LambdaExpressionSyntax">
    <Kind Name="SimpleLambdaExpression" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Parameter" Type="ParameterSyntax">
      <Kind Name="Parameter" />
    </Field>
    <Field Name="ArrowToken" Type="SyntaxToken" Override="true">
      <!-- should be EqualsGreaterThanToken -->
      <Kind Name="EqualsGreaterThanToken" />
    </Field>
    <Choice>
      <Field Name="Block" Type="BlockSyntax" Override="true" />
      <Field Name="ExpressionBody" Type="ExpressionSyntax" Override="true" />
    </Choice>
  </Node>
  <Node Name="RefExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="RefExpression" />
    <Field Name="RefKeyword" Type="SyntaxToken">
      <Kind Name="RefKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="ParenthesizedLambdaExpressionSyntax" Base="LambdaExpressionSyntax">
    <Kind Name="ParenthesizedLambdaExpression" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="ReturnType" Type="TypeSyntax" Optional="true" />
    <Field Name="ParameterList" Type="ParameterListSyntax" />
    <Field Name="ArrowToken" Type="SyntaxToken" Override="true">
      <!-- should be EqualsGreaterThanToken -->
      <Kind Name="EqualsGreaterThanToken" />
    </Field>
    <Choice>
      <Field Name="Block" Type="BlockSyntax" Override="true" />
      <Field Name="ExpressionBody" Type="ExpressionSyntax" Override="true" />
    </Choice>
  </Node>
  <Node Name="InitializerExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ObjectInitializerExpression" />
    <Kind Name="CollectionInitializerExpression" />
    <Kind Name="ArrayInitializerExpression" />
    <Kind Name="ComplexElementInitializerExpression" />
    <Kind Name="WithInitializerExpression" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Expressions" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" AllowTrailingSeparator="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <AbstractNode Name="BaseObjectCreationExpressionSyntax" Base="ExpressionSyntax">
    <Field Name="NewKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="ArgumentList" Type="ArgumentListSyntax" Optional="true" />
    <Field Name="Initializer" Type="InitializerExpressionSyntax" Optional="true" />
  </AbstractNode>
  <Node Name="ImplicitObjectCreationExpressionSyntax" Base="BaseObjectCreationExpressionSyntax">
    <Kind Name="ImplicitObjectCreationExpression" />
    <Field Name="NewKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="ArgumentList" Type="ArgumentListSyntax" Optional="false" Override="true" />
    <Field Name="Initializer" Type="InitializerExpressionSyntax" Optional="true" Override="true" />
  </Node>
  <Node Name="ObjectCreationExpressionSyntax" Base="BaseObjectCreationExpressionSyntax">
    <Kind Name="ObjectCreationExpression" />
    <Field Name="NewKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="ArgumentList" Type="ArgumentListSyntax" Optional="true" Override="true" />
    <Field Name="Initializer" Type="InitializerExpressionSyntax" Optional="true" Override="true" />
  </Node>
  <Node Name="WithExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="WithExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="WithKeyword" Type="SyntaxToken">
      <Kind Name="WithKeyword" />
    </Field>
    <Field Name="Initializer" Type="InitializerExpressionSyntax" />
  </Node>
  <Node Name="AnonymousObjectMemberDeclaratorSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AnonymousObjectMemberDeclarator" />
    <Field Name="NameEquals" Type="NameEqualsSyntax" Optional="true" />
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="AnonymousObjectCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="AnonymousObjectCreationExpression" />
    <Field Name="NewKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Initializers" Type="SeparatedSyntaxList&lt;AnonymousObjectMemberDeclaratorSyntax&gt;" AllowTrailingSeparator="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="ArrayCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ArrayCreationExpression" />
    <Field Name="NewKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="Type" Type="ArrayTypeSyntax" />
    <Field Name="Initializer" Type="InitializerExpressionSyntax" Optional="true" />
  </Node>
  <Node Name="ImplicitArrayCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ImplicitArrayCreationExpression" />
    <Field Name="NewKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Commas" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
    <Field Name="Initializer" Type="InitializerExpressionSyntax" />
  </Node>
  <Node Name="StackAllocArrayCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="StackAllocArrayCreationExpression" />
    <Field Name="StackAllocKeyword" Type="SyntaxToken">
      <Kind Name="StackAllocKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Initializer" Type="InitializerExpressionSyntax" Optional="true" />
  </Node>
  <Node Name="ImplicitStackAllocArrayCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ImplicitStackAllocArrayCreationExpression" />
    <Field Name="StackAllocKeyword" Type="SyntaxToken">
      <Kind Name="StackAllocKeyword" />
    </Field>
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
    <Field Name="Initializer" Type="InitializerExpressionSyntax" />
  </Node>
  <AbstractNode Name="QueryClauseSyntax" Base="CSharpSyntaxNode"></AbstractNode>
  <AbstractNode Name="SelectOrGroupClauseSyntax" Base="CSharpSyntaxNode"></AbstractNode>
  <Node Name="QueryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="QueryExpression" />
    <Field Name="FromClause" Type="FromClauseSyntax" />
    <Field Name="Body" Type="QueryBodySyntax" />
  </Node>
  <Node Name="QueryBodySyntax" Base="CSharpSyntaxNode">
    <Kind Name="QueryBody" />
    <Field Name="Clauses" Type="SyntaxList&lt;QueryClauseSyntax&gt;" MinCount="1" />
    <Field Name="SelectOrGroup" Type="SelectOrGroupClauseSyntax" />
    <Field Name="Continuation" Type="QueryContinuationSyntax" Optional="true" />
  </Node>
  <Node Name="FromClauseSyntax" Base="QueryClauseSyntax">
    <Kind Name="FromClause" />
    <Field Name="FromKeyword" Type="SyntaxToken">
      <Kind Name="FromKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" Optional="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="InKeyword" Type="SyntaxToken">
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="LetClauseSyntax" Base="QueryClauseSyntax">
    <Kind Name="LetClause" />
    <Field Name="LetKeyword" Type="SyntaxToken">
      <Kind Name="LetKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="EqualsToken" Type="SyntaxToken">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="JoinClauseSyntax" Base="QueryClauseSyntax">
    <Kind Name="JoinClause" />
    <Field Name="JoinKeyword" Type="SyntaxToken">
      <Kind Name="JoinKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" Optional="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="InKeyword" Type="SyntaxToken">
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="InExpression" Type="ExpressionSyntax" />
    <Field Name="OnKeyword" Type="SyntaxToken">
      <Kind Name="OnKeyword" />
    </Field>
    <Field Name="LeftExpression" Type="ExpressionSyntax" />
    <Field Name="EqualsKeyword" Type="SyntaxToken">
      <Kind Name="EqualsKeyword" />
    </Field>
    <Field Name="RightExpression" Type="ExpressionSyntax" />
    <Field Name="Into" Type="JoinIntoClauseSyntax" Optional="true" />
  </Node>
  <Node Name="JoinIntoClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="JoinIntoClause" />
    <Field Name="IntoKeyword" Type="SyntaxToken">
      <Kind Name="IntoKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <Node Name="WhereClauseSyntax" Base="QueryClauseSyntax">
    <Kind Name="WhereClause" />
    <Field Name="WhereKeyword" Type="SyntaxToken">
      <Kind Name="WhereKeyword" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" />
  </Node>
  <Node Name="OrderByClauseSyntax" Base="QueryClauseSyntax">
    <Kind Name="OrderByClause" />
    <Field Name="OrderByKeyword" Type="SyntaxToken">
      <Kind Name="OrderByKeyword" />
    </Field>
    <Field Name="Orderings" Type="SeparatedSyntaxList&lt;OrderingSyntax&gt;" MinCount="1" />
  </Node>
  <Node Name="OrderingSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AscendingOrdering" />
    <Kind Name="DescendingOrdering" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="AscendingOrDescendingKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="AscendingKeyword" />
      <Kind Name="DescendingKeyword" />
    </Field>
  </Node>
  <Node Name="SelectClauseSyntax" Base="SelectOrGroupClauseSyntax">
    <Kind Name="SelectClause" />
    <Field Name="SelectKeyword" Type="SyntaxToken">
      <Kind Name="SelectKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="GroupClauseSyntax" Base="SelectOrGroupClauseSyntax">
    <Kind Name="GroupClause" />
    <Field Name="GroupKeyword" Type="SyntaxToken">
      <Kind Name="GroupKeyword" />
    </Field>
    <Field Name="GroupExpression" Type="ExpressionSyntax" />
    <Field Name="ByKeyword" Type="SyntaxToken">
      <Kind Name="ByKeyword" />
    </Field>
    <Field Name="ByExpression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="QueryContinuationSyntax" Base="CSharpSyntaxNode">
    <Kind Name="QueryContinuation" />
    <Field Name="IntoKeyword" Type="SyntaxToken">
      <Kind Name="IntoKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="Body" Type="QueryBodySyntax" />
  </Node>
  <Node Name="OmittedArraySizeExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="OmittedArraySizeExpression" />
    <Field Name="OmittedArraySizeExpressionToken" Type="SyntaxToken">
      <Kind Name="OmittedArraySizeExpressionToken" />
    </Field>
  </Node>
  <Node Name="InterpolatedStringExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="InterpolatedStringExpression" />
    <Field Name="StringStartToken" Type="SyntaxToken">
      <Kind Name="InterpolatedStringStartToken" />
      <Kind Name="InterpolatedVerbatimStringStartToken" />
    </Field>
    <Field Name="Contents" Type="SyntaxList&lt;InterpolatedStringContentSyntax&gt;" />
    <Field Name="StringEndToken" Type="SyntaxToken">
      <Kind Name="InterpolatedStringEndToken" />
    </Field>
  </Node>
  <Node Name="IsPatternExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="IsPatternExpression" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="IsKeyword" Type="SyntaxToken">
      <Kind Name="IsKeyword" />
    </Field>
    <Field Name="Pattern" Type="PatternSyntax" />
  </Node>
  <Node Name="ThrowExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ThrowExpression" />
    <Field Name="ThrowKeyword" Type="SyntaxToken" Optional="false">
      <Kind Name="ThrowKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Optional="false" />
  </Node>
  <Node Name="WhenClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="WhenClause" />
    <Field Name="WhenKeyword" Type="SyntaxToken">
      <Kind Name="WhenKeyword" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" />
  </Node>
  <AbstractNode Name="PatternSyntax" Base="ExpressionOrPatternSyntax" />
  <Node Name="DiscardPatternSyntax" Base="PatternSyntax">
    <Kind Name="DiscardPattern" />
    <Field Name="UnderscoreToken" Type="SyntaxToken">
      <Kind Name="UnderscoreToken" />
    </Field>
  </Node>
  <Node Name="DeclarationPatternSyntax" Base="PatternSyntax">
    <Kind Name="DeclarationPattern" />
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Designation" Type="VariableDesignationSyntax">
      <Kind Name="SingleVariableDesignation" />
      <Kind Name="DiscardDesignation" />
    </Field>
  </Node>
  <Node Name="VarPatternSyntax" Base="PatternSyntax">
    <Kind Name="VarPattern" />
    <Field Name="VarKeyword" Type="SyntaxToken">
      <Kind Name="VarKeyword" />
    </Field>
    <Field Name="Designation" Type="VariableDesignationSyntax" />
  </Node>
  <Node Name="RecursivePatternSyntax" Base="PatternSyntax">
    <Kind Name="RecursivePattern" />
    <Field Name="Type" Type="TypeSyntax" Optional="true" />
    <Field Name="PositionalPatternClause" Type="PositionalPatternClauseSyntax" Optional="true" />
    <Field Name="PropertyPatternClause" Type="PropertyPatternClauseSyntax" Optional="true" />
    <Field Name="Designation" Type="VariableDesignationSyntax" Optional="true">
      <Kind Name="SingleVariableDesignation" />
      <Kind Name="DiscardDesignation" />
    </Field>
  </Node>
  <Node Name="PositionalPatternClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="PositionalPatternClause" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Subpatterns" Type="SeparatedSyntaxList&lt;SubpatternSyntax&gt;" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="PropertyPatternClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="PropertyPatternClause" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Subpatterns" Type="SeparatedSyntaxList&lt;SubpatternSyntax&gt;" AllowTrailingSeparator="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="SubpatternSyntax" Base="CSharpSyntaxNode">
    <Kind Name="Subpattern" />
    <Field Name="ExpressionColon" Type="BaseExpressionColonSyntax" Optional="true" />
    <Field Name="Pattern" Type="PatternSyntax" />
  </Node>
  <Node Name="ConstantPatternSyntax" Base="PatternSyntax">
    <Kind Name="ConstantPattern" />
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <!-- Pattern forms added for C# 9.0 -->
  <Node Name="ParenthesizedPatternSyntax" Base="PatternSyntax">
    <Kind Name="ParenthesizedPattern" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Pattern" Type="PatternSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="RelationalPatternSyntax" Base="PatternSyntax">
    <Kind Name="RelationalPattern" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="EqualsEqualsToken" />
      <Kind Name="ExclamationEqualsToken" />
      <Kind Name="LessThanToken" />
      <Kind Name="LessThanEqualsToken" />
      <Kind Name="GreaterThanToken" />
      <Kind Name="GreaterThanEqualsToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="TypePatternSyntax" Base="PatternSyntax">
    <Kind Name="TypePattern" />
    <Field Name="Type" Type="TypeSyntax" />
  </Node>
  <Node Name="BinaryPatternSyntax" Base="PatternSyntax">
    <Kind Name="OrPattern" />
    <Kind Name="AndPattern" />
    <Field Name="Left" Type="PatternSyntax" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="OrKeyword" />
      <Kind Name="AndKeyword" />
    </Field>
    <Field Name="Right" Type="PatternSyntax" />
  </Node>
  <Node Name="UnaryPatternSyntax" Base="PatternSyntax">
    <Kind Name="NotPattern" />
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="NotKeyword" />
    </Field>
    <Field Name="Pattern" Type="PatternSyntax" />
  </Node>
  <AbstractNode Name="InterpolatedStringContentSyntax" Base="CSharpSyntaxNode" />
  <Node Name="InterpolatedStringTextSyntax" Base="InterpolatedStringContentSyntax">
    <Kind Name="InterpolatedStringText" />
    <Field Name="TextToken" Type="SyntaxToken">
      <Kind Name="InterpolatedStringTextToken" />
    </Field>
  </Node>
  <Node Name="InterpolationSyntax" Base="InterpolatedStringContentSyntax">
    <Kind Name="Interpolation" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="AlignmentClause" Type="InterpolationAlignmentClauseSyntax" Optional="true" />
    <Field Name="FormatClause" Type="InterpolationFormatClauseSyntax" Optional="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="InterpolationAlignmentClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="InterpolationAlignmentClause" />
    <Field Name="CommaToken" Type="SyntaxToken" />
    <Field Name="Value" Type="ExpressionSyntax" />
  </Node>
  <Node Name="InterpolationFormatClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="InterpolationFormatClause" />
    <Field Name="ColonToken" Type="SyntaxToken" />
    <Field Name="FormatStringToken" Type="SyntaxToken">
      <Kind Name="InterpolatedStringTextToken" />
    </Field>
  </Node>
  <!-- Statements -->
  <Node Name="GlobalStatementSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="GlobalStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <AbstractNode Name="StatementSyntax" Base="CSharpSyntaxNode">
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
  </AbstractNode>
  <Node Name="BlockSyntax" Base="StatementSyntax">
    <Kind Name="Block" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Statements" Type="SyntaxList&lt;StatementSyntax&gt;" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="LocalFunctionStatementSyntax" Base="StatementSyntax">
    <Kind Name="LocalFunctionStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Field Name="ReturnType" Type="TypeSyntax" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" />
    <Field Name="ParameterList" Type="ParameterListSyntax" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" />
        <Field Name="SemicolonToken" Type="SyntaxToken">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="LocalDeclarationStatementSyntax" Base="StatementSyntax">
    <Kind Name="LocalDeclarationStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="AwaitKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="UsingKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="UsingKeyword" />
    </Field>
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Field Name="Declaration" Type="VariableDeclarationSyntax" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="VariableDeclarationSyntax" Base="CSharpSyntaxNode">
    <Kind Name="VariableDeclaration" />
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Variables" Type="SeparatedSyntaxList&lt;VariableDeclaratorSyntax&gt;" MinCount="1" />
  </Node>
  <Node Name="VariableDeclaratorSyntax" Base="CSharpSyntaxNode">
    <Kind Name="VariableDeclarator" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="ArgumentList" Type="BracketedArgumentListSyntax" Optional="true" />
    <Field Name="Initializer" Type="EqualsValueClauseSyntax" Optional="true" />
  </Node>
  <Node Name="EqualsValueClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="EqualsValueClause" />
    <Field Name="EqualsToken" Type="SyntaxToken">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="Value" Type="ExpressionSyntax" />
  </Node>
  <AbstractNode Name="VariableDesignationSyntax" Base="CSharpSyntaxNode"></AbstractNode>
  <Node Name="SingleVariableDesignationSyntax" Base="VariableDesignationSyntax">
    <Kind Name="SingleVariableDesignation" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <Node Name="DiscardDesignationSyntax" Base="VariableDesignationSyntax">
    <Kind Name="DiscardDesignation" />
    <Field Name="UnderscoreToken" Type="SyntaxToken">
      <Kind Name="UnderscoreToken" />
    </Field>
  </Node>
  <Node Name="ParenthesizedVariableDesignationSyntax" Base="VariableDesignationSyntax">
    <Kind Name="ParenthesizedVariableDesignation" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Variables" Type="SeparatedSyntaxList&lt;VariableDesignationSyntax&gt;" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="ExpressionStatementSyntax" Base="StatementSyntax">
    <Kind Name="ExpressionStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="EmptyStatementSyntax" Base="StatementSyntax">
    <Kind Name="EmptyStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="LabeledStatementSyntax" Base="StatementSyntax">
    <Kind Name="LabeledStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="GotoStatementSyntax" Base="StatementSyntax">
    <Kind Name="GotoStatement" />
    <Kind Name="GotoCaseStatement" />
    <Kind Name="GotoDefaultStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="GotoKeyword" Type="SyntaxToken">
      <Kind Name="GotoKeyword" />
    </Field>
    <Field Name="CaseOrDefaultKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="CaseKeyword" />
      <Kind Name="DefaultKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Optional="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="BreakStatementSyntax" Base="StatementSyntax">
    <Kind Name="BreakStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="BreakKeyword" Type="SyntaxToken">
      <Kind Name="BreakKeyword" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="ContinueStatementSyntax" Base="StatementSyntax">
    <Kind Name="ContinueStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="ContinueKeyword" Type="SyntaxToken">
      <Kind Name="ContinueKeyword" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="ReturnStatementSyntax" Base="StatementSyntax">
    <Kind Name="ReturnStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="ReturnKeyword" Type="SyntaxToken">
      <Kind Name="ReturnKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Optional="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="ThrowStatementSyntax" Base="StatementSyntax">
    <Kind Name="ThrowStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="ThrowKeyword" Type="SyntaxToken">
      <Kind Name="ThrowKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Optional="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="YieldStatementSyntax" Base="StatementSyntax">
    <Kind Name="YieldReturnStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Kind Name="YieldBreakStatement" />
    <Field Name="YieldKeyword" Type="SyntaxToken">
      <Kind Name="YieldKeyword" />
    </Field>
    <Field Name="ReturnOrBreakKeyword" Type="SyntaxToken">
      <Kind Name="ReturnKeyword" />
      <Kind Name="BreakKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Optional="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="WhileStatementSyntax" Base="StatementSyntax">
    <Kind Name="WhileStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="WhileKeyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="DoStatementSyntax" Base="StatementSyntax">
    <Kind Name="DoStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="DoKeyword" Type="SyntaxToken">
      <Kind Name="DoKeyword" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
    <Field Name="WhileKeyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="ForStatementSyntax" Base="StatementSyntax">
    <Kind Name="ForStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="ForKeyword" Type="SyntaxToken">
      <Kind Name="ForKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <!-- Declaration and Initializers are mutually exclusive. -->
    <Choice>
      <Field Name="Declaration" Type="VariableDeclarationSyntax" Optional="true" />
      <Field Name="Initializers" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
    </Choice>
    <Field Name="FirstSemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" Optional="true" />
    <Field Name="SecondSemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
    <Field Name="Incrementors" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <!-- Because there are two forms of the foreach loop, we make an abstract base. -->
  <AbstractNode Name="CommonForEachStatementSyntax" Base="StatementSyntax">
    <Field Name="AwaitKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="ForEachKeyword" Type="SyntaxToken">
      <Kind Name="ForEachKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <!-- At this point one of two declaration forms appears -->
    <Field Name="InKeyword" Type="SyntaxToken">
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </AbstractNode>
  <Node Name="ForEachStatementSyntax" Base="CommonForEachStatementSyntax">
    <!-- This is the existing C# 6 node. -->
    <Kind Name="ForEachStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="AwaitKeyword" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="ForEachKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="ForEachKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="InKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Override="true" />
    <Field Name="CloseParenToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" Override="true" />
  </Node>
  <!-- We name this "DeclarationForEachStatementSyntax" because it can express existing foreach
       loops. We may elect to represent all foreach loops using this node and deprecate (stop parsing
       into) the old one. -->
  <Node Name="ForEachVariableStatementSyntax" Base="CommonForEachStatementSyntax">
    <Kind Name="ForEachVariableStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="AwaitKeyword" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="ForEachKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="ForEachKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Variable" Type="ExpressionSyntax" />
    <Field Name="InKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" Override="true" />
    <Field Name="CloseParenToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" Override="true" />
  </Node>
  <!--
  - using (...) { ... }
  - await using (...) { ... }
  -->
  <Node Name="UsingStatementSyntax" Base="StatementSyntax">
    <Kind Name="UsingStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="AwaitKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="AwaitKeyword" />
    </Field>
    <Field Name="UsingKeyword" Type="SyntaxToken">
      <Kind Name="UsingKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Choice>
      <Field Name="Declaration" Type="VariableDeclarationSyntax" />
      <Field Name="Expression" Type="ExpressionSyntax" />
    </Choice>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="FixedStatementSyntax" Base="StatementSyntax">
    <Kind Name="FixedStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="FixedKeyword" Type="SyntaxToken">
      <Kind Name="FixedKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Declaration" Type="VariableDeclarationSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="CheckedStatementSyntax" Base="StatementSyntax">
    <Kind Name="CheckedStatement" />
    <Kind Name="UncheckedStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="CheckedKeyword" />
      <Kind Name="UncheckedKeyword" />
    </Field>
    <Field Name="Block" Type="BlockSyntax" />
  </Node>
  <Node Name="UnsafeStatementSyntax" Base="StatementSyntax">
    <Kind Name="UnsafeStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="UnsafeKeyword" Type="SyntaxToken">
      <Kind Name="UnsafeKeyword" />
    </Field>
    <Field Name="Block" Type="BlockSyntax" />
  </Node>
  <Node Name="LockStatementSyntax" Base="StatementSyntax">
    <Kind Name="LockStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="LockKeyword" Type="SyntaxToken">
      <Kind Name="LockKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="IfStatementSyntax" Base="StatementSyntax">
    <Kind Name="IfStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="IfKeyword" Type="SyntaxToken">
      <Kind Name="IfKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
    <Field Name="Else" Type="ElseClauseSyntax" Optional="true" />
  </Node>
  <Node Name="ElseClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="ElseClause" />
    <Field Name="ElseKeyword" Type="SyntaxToken">
      <Kind Name="ElseKeyword" />
    </Field>
    <Field Name="Statement" Type="StatementSyntax" />
  </Node>
  <Node Name="SwitchStatementSyntax" Base="StatementSyntax" SkipConvenienceFactories="true">
    <Kind Name="SwitchStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="SwitchKeyword" Type="SyntaxToken">
      <Kind Name="SwitchKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken" Optional="true">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken" Optional="true">
      <Kind Name="CloseParenToken" />
    </Field>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Sections" Type="SyntaxList&lt;SwitchSectionSyntax&gt;" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="SwitchSectionSyntax" Base="CSharpSyntaxNode">
    <Kind Name="SwitchSection" />
    <Field Name="Labels" Type="SyntaxList&lt;SwitchLabelSyntax&gt;" MinCount="1" />
    <Field Name="Statements" Type="SyntaxList&lt;StatementSyntax&gt;" MinCount="1" />
  </Node>
  <AbstractNode Name="SwitchLabelSyntax" Base="CSharpSyntaxNode">
    <Field Name="Keyword" Type="SyntaxToken" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
  </AbstractNode>
  <Node Name="CasePatternSwitchLabelSyntax" Base="SwitchLabelSyntax">
    <Kind Name="CasePatternSwitchLabel" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="CaseKeyword" />
    </Field>
    <Field Name="Pattern" Type="PatternSyntax" />
    <Field Name="WhenClause" Type="WhenClauseSyntax" Optional="true" />
    <Field Name="ColonToken" Type="SyntaxToken" Override="true" />
  </Node>
  <Node Name="CaseSwitchLabelSyntax" Base="SwitchLabelSyntax">
    <Kind Name="CaseSwitchLabel" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="CaseKeyword" />
    </Field>
    <Field Name="Value" Type="ExpressionSyntax" />
    <Field Name="ColonToken" Type="SyntaxToken" Override="true" />
  </Node>
  <Node Name="DefaultSwitchLabelSyntax" Base="SwitchLabelSyntax">
    <Kind Name="DefaultSwitchLabel" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="DefaultKeyword" />
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken" Override="true" />
  </Node>
  <Node Name="SwitchExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="SwitchExpression" />
    <Field Name="GoverningExpression" Type="ExpressionSyntax" />
    <Field Name="SwitchKeyword" Type="SyntaxToken">
      <Kind Name="SwitchKeyword" />
    </Field>
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Arms" Type="SeparatedSyntaxList&lt;SwitchExpressionArmSyntax&gt;" AllowTrailingSeparator="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="SwitchExpressionArmSyntax" Base="CSharpSyntaxNode">
    <Kind Name="SwitchExpressionArm" />
    <Field Name="Pattern" Type="PatternSyntax" />
    <Field Name="WhenClause" Type="WhenClauseSyntax" Optional="true" />
    <Field Name="EqualsGreaterThanToken" Type="SyntaxToken">
      <Kind Name="EqualsGreaterThanToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="TryStatementSyntax" Base="StatementSyntax">
    <Kind Name="TryStatement" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="TryKeyword" Type="SyntaxToken">
      <Kind Name="TryKeyword" />
    </Field>
    <Field Name="Block" Type="BlockSyntax" />
    <Field Name="Catches" Type="SyntaxList&lt;CatchClauseSyntax&gt;" />
    <Field Name="Finally" Type="FinallyClauseSyntax" Optional="true" />
  </Node>
  <Node Name="CatchClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="CatchClause" />
    <Field Name="CatchKeyword" Type="SyntaxToken">
      <Kind Name="CatchKeyword" />
    </Field>
    <Field Name="Declaration" Type="CatchDeclarationSyntax" Optional="true" />
    <Field Name="Filter" Type="CatchFilterClauseSyntax" Optional="true" />
    <Field Name="Block" Type="BlockSyntax" />
  </Node>
  <Node Name="CatchDeclarationSyntax" Base="CSharpSyntaxNode">
    <Kind Name="CatchDeclaration" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Identifier" Type="SyntaxToken" Optional="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="CatchFilterClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="CatchFilterClause" />
    <Field Name="WhenKeyword" Type="SyntaxToken">
      <Kind Name="WhenKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="FilterExpression" Type="ExpressionSyntax" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="FinallyClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="FinallyClause" />
    <Field Name="FinallyKeyword" Type="SyntaxToken">
      <Kind Name="FinallyKeyword" />
    </Field>
    <Field Name="Block" Type="BlockSyntax" />
  </Node>
  <!-- Declarations -->
  <Node Name="CompilationUnitSyntax" Base="CSharpSyntaxNode">
    <Kind Name="CompilationUnit" />
    <Field Name="Externs" Type="SyntaxList&lt;ExternAliasDirectiveSyntax&gt;" />
    <Field Name="Usings" Type="SyntaxList&lt;UsingDirectiveSyntax&gt;" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" />
    <Field Name="EndOfFileToken" Type="SyntaxToken">
      <Kind Name="EndOfFileToken" />
    </Field>
  </Node>
  <Node Name="ExternAliasDirectiveSyntax" Base="CSharpSyntaxNode">
    <Kind Name="ExternAliasDirective" />
    <Field Name="ExternKeyword" Type="SyntaxToken">
      <Kind Name="ExternKeyword" />
    </Field>
    <Field Name="AliasKeyword" Type="SyntaxToken">
      <Kind Name="AliasKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="UsingDirectiveSyntax" Base="CSharpSyntaxNode">
    <Kind Name="UsingDirective" />
    <Field Name="GlobalKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="GlobalKeyword" />
    </Field>
    <Field Name="UsingKeyword" Type="SyntaxToken">
      <Kind Name="UsingKeyword" />
    </Field>
    <Choice Optional="true">
      <Field Name="StaticKeyword" Type="SyntaxToken" />
      <Field Name="Alias" Type="NameEqualsSyntax" />
    </Choice>
    <Field Name="Name" Type="NameSyntax" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <AbstractNode Name="MemberDeclarationSyntax" Base="CSharpSyntaxNode">
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
  </AbstractNode>
  <AbstractNode Name="BaseNamespaceDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="NamespaceKeyword" Type="SyntaxToken">
      <Kind Name="NamespaceKeyword" />
    </Field>
    <Field Name="Name" Type="NameSyntax" />
    <Field Name="Externs" Type="SyntaxList&lt;ExternAliasDirectiveSyntax&gt;" />
    <Field Name="Usings" Type="SyntaxList&lt;UsingDirectiveSyntax&gt;" />
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" />
  </AbstractNode>
  <Node Name="NamespaceDeclarationSyntax" Base="BaseNamespaceDeclarationSyntax">
    <Kind Name="NamespaceDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="NamespaceKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="NamespaceKeyword" />
    </Field>
    <Field Name="Name" Type="NameSyntax" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Externs" Type="SyntaxList&lt;ExternAliasDirectiveSyntax&gt;" Override="true" />
    <Field Name="Usings" Type="SyntaxList&lt;UsingDirectiveSyntax&gt;" Override="true" />
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="FileScopedNamespaceDeclarationSyntax" Base="BaseNamespaceDeclarationSyntax">
    <Kind Name="FileScopedNamespaceDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="NamespaceKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="NamespaceKeyword" />
    </Field>
    <Field Name="Name" Type="NameSyntax" Override="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
    <Field Name="Externs" Type="SyntaxList&lt;ExternAliasDirectiveSyntax&gt;" Override="true" />
    <Field Name="Usings" Type="SyntaxList&lt;UsingDirectiveSyntax&gt;" Override="true" />
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
  </Node>
  <Node Name="AttributeListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AttributeList" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Target" Type="AttributeTargetSpecifierSyntax" Optional="true" />
    <Field Name="Attributes" Type="SeparatedSyntaxList&lt;AttributeSyntax&gt;" MinCount="1" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <Node Name="AttributeTargetSpecifierSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AttributeTargetSpecifier" />
    <Field Name="Identifier" Type="SyntaxToken" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
  </Node>
  <Node Name="AttributeSyntax" Base="CSharpSyntaxNode">
    <Kind Name="Attribute" />
    <Field Name="Name" Type="NameSyntax" />
    <Field Name="ArgumentList" Type="AttributeArgumentListSyntax" Optional="true" />
  </Node>
  <Node Name="AttributeArgumentListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AttributeArgumentList" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Arguments" Type="SeparatedSyntaxList&lt;AttributeArgumentSyntax&gt;" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="AttributeArgumentSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AttributeArgument" />
    <Choice>
      <Field Name="NameEquals" Type="NameEqualsSyntax" Optional="true" />
      <Field Name="NameColon" Type="NameColonSyntax" Optional="true" />
    </Choice>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="NameEqualsSyntax" Base="CSharpSyntaxNode">
    <Kind Name="NameEquals" />
    <Field Name="Name" Type="IdentifierNameSyntax">
      <Kind Name="IdentifierName" />
    </Field>
    <Field Name="EqualsToken" Type="SyntaxToken">
      <Kind Name="EqualsToken" />
    </Field>
  </Node>
  <Node Name="TypeParameterListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="TypeParameterList" />
    <Field Name="LessThanToken" Type="SyntaxToken">
      <Kind Name="LessThanToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;TypeParameterSyntax&gt;" MinCount="1" />
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <Kind Name="GreaterThanToken" />
    </Field>
  </Node>
  <Node Name="TypeParameterSyntax" Base="CSharpSyntaxNode">
    <Kind Name="TypeParameter" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="VarianceKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="InKeyword" />
      <Kind Name="OutKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <AbstractNode Name="BaseTypeDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken" Optional="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="CloseBraceToken" Type="SyntaxToken" Optional="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </AbstractNode>
  <AbstractNode Name="TypeDeclarationSyntax" Base="BaseTypeDeclarationSyntax">
    <Field Name="Keyword" Type="SyntaxToken" />
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" />
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" />
  </AbstractNode>
  <Node Name="ClassDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="ClassDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="ClassKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" Override="true" />
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" Override="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="StructDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="StructDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="StructKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" Override="true" />
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" Override="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="InterfaceDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="InterfaceDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <Kind Name="InterfaceKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" Override="true" />
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" Override="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="RecordDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="RecordDeclaration" />
    <Kind Name="RecordStructDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Keyword" Type="SyntaxToken" Override="true">
      <ContextualKind Name="RecordKeyword" />
    </Field>
    <Field Name="ClassOrStructKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="ClassKeyword" />
      <Kind Name="StructKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" Override="true" />
    <Field Name="ParameterList" Type="ParameterListSyntax" Optional="true" />
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" Override="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" Override="true" />
    <Field Name="OpenBraceToken" Type="SyntaxToken" Override="true" Optional="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken" Override="true" Optional="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="EnumDeclarationSyntax" Base="BaseTypeDeclarationSyntax">
    <Kind Name="EnumDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="EnumKeyword" Type="SyntaxToken">
      <Kind Name="EnumKeyword" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="BaseList" Type="BaseListSyntax" Optional="true" Override="true"></Field>
    <Field Name="OpenBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Members" Type="SeparatedSyntaxList&lt;EnumMemberDeclarationSyntax&gt;" AllowTrailingSeparator="true" />
    <Field Name="CloseBraceToken" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken" />
    </Field>
    <Field Name="SemicolonToken" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="DelegateDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="DelegateDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="DelegateKeyword" Type="SyntaxToken">
      <Kind Name="DelegateKeyword" />
    </Field>
    <Field Name="ReturnType" Type="TypeSyntax" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" />
    <Field Name="ParameterList" Type="ParameterListSyntax" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="EnumMemberDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="EnumMemberDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="EqualsValue" Type="EqualsValueClauseSyntax" Optional="true" />
  </Node>
  <Node Name="BaseListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="BaseList" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
    <Field Name="Types" Type="SeparatedSyntaxList&lt;BaseTypeSyntax&gt;" MinCount="1" />
  </Node>
  <AbstractNode Name="BaseTypeSyntax" Base="CSharpSyntaxNode">
    <Field Name="Type" Type="TypeSyntax"></Field>
  </AbstractNode>
  <Node Name="SimpleBaseTypeSyntax" Base="BaseTypeSyntax">
    <Kind Name="SimpleBaseType" />
    <Field Name="Type" Type="TypeSyntax" Override="true"></Field>
  </Node>
  <Node Name="PrimaryConstructorBaseTypeSyntax" Base="BaseTypeSyntax">
    <Kind Name="PrimaryConstructorBaseType" />
    <Field Name="Type" Type="TypeSyntax" Override="true" />
    <Field Name="ArgumentList" Type="ArgumentListSyntax" />
  </Node>
  <Node Name="TypeParameterConstraintClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="TypeParameterConstraintClause" />
    <Field Name="WhereKeyword" Type="SyntaxToken">
      <Kind Name="WhereKeyword" />
    </Field>
    <Field Name="Name" Type="IdentifierNameSyntax">
      <Kind Name="IdentifierName" />
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
    <Field Name="Constraints" Type="SeparatedSyntaxList&lt;TypeParameterConstraintSyntax&gt;" MinCount="1" />
  </Node>
  <AbstractNode Name="TypeParameterConstraintSyntax" Base="CSharpSyntaxNode" />
  <Node Name="ConstructorConstraintSyntax" Base="TypeParameterConstraintSyntax">
    <Kind Name="ConstructorConstraint" />
    <Field Name="NewKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword" />
    </Field>
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="ClassOrStructConstraintSyntax" Base="TypeParameterConstraintSyntax">
    <Kind Name="ClassConstraint" />
    <Kind Name="StructConstraint" />
    <Field Name="ClassOrStructKeyword" Type="SyntaxToken">
      <Kind Name="ClassKeyword" />
      <Kind Name="StructKeyword" />
    </Field>
    <Field Name="QuestionToken" Type="SyntaxToken" Optional="true">
      <Kind Name="QuestionToken" />
    </Field>
  </Node>
  <Node Name="TypeConstraintSyntax" Base="TypeParameterConstraintSyntax">
    <Kind Name="TypeConstraint" />
    <Field Name="Type" Type="TypeSyntax" />
  </Node>
  <Node Name="DefaultConstraintSyntax" Base="TypeParameterConstraintSyntax">
    <Kind Name="DefaultConstraint" />
    <Field Name="DefaultKeyword" Type="SyntaxToken">
      <Kind Name="DefaultKeyword" />
    </Field>
  </Node>
  <AbstractNode Name="BaseFieldDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="Declaration" Type="VariableDeclarationSyntax" />
    <Field Name="SemicolonToken" Type="SyntaxToken">
      <Kind Name="SemicolonToken" />
    </Field>
  </AbstractNode>
  <Node Name="FieldDeclarationSyntax" Base="BaseFieldDeclarationSyntax">
    <Kind Name="FieldDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Declaration" Type="VariableDeclarationSyntax" Override="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="EventFieldDeclarationSyntax" Base="BaseFieldDeclarationSyntax">
    <Kind Name="EventFieldDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="EventKeyword" Type="SyntaxToken">
      <Kind Name="EventKeyword" />
    </Field>
    <Field Name="Declaration" Type="VariableDeclarationSyntax" Override="true" />
    <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
      <Kind Name="SemicolonToken" />
    </Field>
  </Node>
  <Node Name="ExplicitInterfaceSpecifierSyntax" Base="CSharpSyntaxNode">
    <Kind Name="ExplicitInterfaceSpecifier" />
    <Field Name="Name" Type="NameSyntax" />
    <Field Name="DotToken" Type="SyntaxToken">
      <Kind Name="DotToken" />
    </Field>
  </Node>
  <AbstractNode Name="BaseMethodDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="ParameterList" Type="ParameterListSyntax" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" />
        <Field Name="SemicolonToken" Type="SyntaxToken">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </AbstractNode>
  <Node Name="MethodDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="MethodDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="ReturnType" Type="TypeSyntax" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="TypeParameterList" Type="TypeParameterListSyntax" Optional="true" />
    <Field Name="ParameterList" Type="ParameterListSyntax" Override="true" />
    <Field Name="ConstraintClauses" Type="SyntaxList&lt;TypeParameterConstraintClauseSyntax&gt;" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" Override="true" />
        <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="OperatorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <!-- should be multiple kinds? -->
    <Kind Name="OperatorDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="ReturnType" Type="TypeSyntax" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" />
    <Field Name="OperatorKeyword" Type="SyntaxToken">
      <Kind Name="OperatorKeyword" />
    </Field>
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="PlusToken" />
      <Kind Name="MinusToken" />
      <Kind Name="ExclamationToken" />
      <Kind Name="TildeToken" />
      <Kind Name="PlusPlusToken" />
      <Kind Name="MinusMinusToken" />
      <Kind Name="AsteriskToken" />
      <Kind Name="SlashToken" />
      <Kind Name="PercentToken" />
      <Kind Name="LessThanLessThanToken" />
      <Kind Name="GreaterThanGreaterThanToken" />
      <Kind Name="BarToken" />
      <Kind Name="AmpersandToken" />
      <Kind Name="CaretToken" />
      <Kind Name="EqualsEqualsToken" />
      <Kind Name="ExclamationEqualsToken" />
      <Kind Name="LessThanToken" />
      <Kind Name="LessThanEqualsToken" />
      <Kind Name="GreaterThanToken" />
      <Kind Name="GreaterThanEqualsToken" />
      <Kind Name="FalseKeyword" />
      <Kind Name="TrueKeyword" />
      <Kind Name="IsKeyword" />
    </Field>
    <Field Name="ParameterList" Type="ParameterListSyntax" Override="true" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" Override="true" />
        <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="ConversionOperatorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <!-- should be split into two kinds-->
    <Kind Name="ConversionOperatorDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="ImplicitOrExplicitKeyword" Type="SyntaxToken">
      <Kind Name="ImplicitKeyword" />
      <Kind Name="ExplicitKeyword" />
    </Field>
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" />
    <Field Name="OperatorKeyword" Type="SyntaxToken">
      <Kind Name="OperatorKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="ParameterList" Type="ParameterListSyntax" Override="true" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" Override="true" />
        <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="ConstructorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="ConstructorDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="ParameterList" Type="ParameterListSyntax" Override="true" />
    <Field Name="Initializer" Type="ConstructorInitializerSyntax" Optional="true" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" Override="true" />
        <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="ConstructorInitializerSyntax" Base="CSharpSyntaxNode">
    <Kind Name="BaseConstructorInitializer" />
    <Kind Name="ThisConstructorInitializer" />
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
    <Field Name="ThisOrBaseKeyword" Type="SyntaxToken">
      <Kind Name="BaseKeyword" />
      <Kind Name="ThisKeyword" />
    </Field>
    <Field Name="ArgumentList" Type="ArgumentListSyntax" />
  </Node>
  <Node Name="DestructorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="DestructorDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="TildeToken" Type="SyntaxToken">
      <Kind Name="TildeToken" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="ParameterList" Type="ParameterListSyntax" Override="true" />
    <Choice>
      <Field Name="Body" Type="BlockSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" Override="true" />
        <Field Name="SemicolonToken" Type="SyntaxToken" Override="true">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <AbstractNode Name="BasePropertyDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" />
    <Field Name="AccessorList" Type="AccessorListSyntax" Optional="true" />
  </AbstractNode>
  <Node Name="PropertyDeclarationSyntax" Base="BasePropertyDeclarationSyntax">
    <Kind Name="PropertyDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Type" Type="TypeSyntax" Override="true" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Choice>
      <Field Name="AccessorList" Type="AccessorListSyntax" Override="true" />
      <Sequence>
        <Choice>
          <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" />
          <Field Name="Initializer" Type="EqualsValueClauseSyntax" />
        </Choice>
        <Field Name="SemicolonToken" Type="SyntaxToken">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="ArrowExpressionClauseSyntax" Base="CSharpSyntaxNode">
    <Kind Name="ArrowExpressionClause" />
    <Field Name="ArrowToken" Type="SyntaxToken">
      <Kind Name="EqualsGreaterThanToken" />
    </Field>
    <Field Name="Expression" Type="ExpressionSyntax" />
  </Node>
  <Node Name="EventDeclarationSyntax" Base="BasePropertyDeclarationSyntax">
    <Kind Name="EventDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="EventKeyword" Type="SyntaxToken">
      <Kind Name="EventKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" Override="true" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Choice>
      <Field Name="AccessorList" Type="AccessorListSyntax" Override="true" />
      <Field Name="SemicolonToken" Type="SyntaxToken">
        <Kind Name="SemicolonToken" />
      </Field>
    </Choice>
  </Node>
  <Node Name="IndexerDeclarationSyntax" Base="BasePropertyDeclarationSyntax">
    <Kind Name="IndexerDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Type" Type="TypeSyntax" Override="true" />
    <Field Name="ExplicitInterfaceSpecifier" Type="ExplicitInterfaceSpecifierSyntax" Optional="true" Override="true" />
    <Field Name="ThisKeyword" Type="SyntaxToken">
      <Kind Name="ThisKeyword" />
    </Field>
    <Field Name="ParameterList" Type="BracketedParameterListSyntax" />
    <Choice>
      <Field Name="AccessorList" Type="AccessorListSyntax" Override="true" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" />
        <Field Name="SemicolonToken" Type="SyntaxToken">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <Node Name="AccessorListSyntax" Base="CSharpSyntaxNode">
    <Kind Name="AccessorList" />
    <Field Name="OpenBraceToken" Type="SyntaxToken">
      <Kind Name="OpenBraceToken" />
    </Field>
    <Field Name="Accessors" Type="SyntaxList&lt;AccessorDeclarationSyntax&gt;" />
    <Field Name="CloseBraceToken" Type="SyntaxToken">
      <Kind Name="CloseBraceToken" />
    </Field>
  </Node>
  <Node Name="AccessorDeclarationSyntax" Base="CSharpSyntaxNode">
    <Kind Name="GetAccessorDeclaration" />
    <Kind Name="SetAccessorDeclaration" />
    <Kind Name="InitAccessorDeclaration" />
    <Kind Name="AddAccessorDeclaration" />
    <Kind Name="RemoveAccessorDeclaration" />
    <Kind Name="UnknownAccessorDeclaration" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Field Name="Keyword" Type="SyntaxToken">
      <Kind Name="GetKeyword" />
      <Kind Name="SetKeyword" />
      <Kind Name="InitKeyword" />
      <Kind Name="AddKeyword" />
      <Kind Name="RemoveKeyword" />
      <Kind Name="IdentifierToken" />
    </Field>
    <Choice>
      <Field Name="Body" Type="BlockSyntax" />
      <Sequence>
        <Field Name="ExpressionBody" Type="ArrowExpressionClauseSyntax" />
        <Field Name="SemicolonToken" Type="SyntaxToken">
          <Kind Name="SemicolonToken" />
        </Field>
      </Sequence>
    </Choice>
  </Node>
  <AbstractNode Name="BaseParameterListSyntax" Base="CSharpSyntaxNode">
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;" />
  </AbstractNode>
  <Node Name="ParameterListSyntax" Base="BaseParameterListSyntax">
    <Kind Name="ParameterList" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;" Override="true" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="BracketedParameterListSyntax" Base="BaseParameterListSyntax">
    <Kind Name="BracketedParameterList" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;" Override="true" MinCount="1" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <AbstractNode Name="BaseParameterSyntax" Base="CSharpSyntaxNode">
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <Field Name="Type" Type="TypeSyntax" Optional="true" />
  </AbstractNode>
  <Node Name="ParameterSyntax" Base="BaseParameterSyntax">
    <Kind Name="Parameter" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Type" Type="TypeSyntax" Optional="true" Override="true" />
    <Field Name="Identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
      <Kind Name="ArgListKeyword" />
    </Field>
    <Field Name="Default" Type="EqualsValueClauseSyntax" Optional="true" />
  </Node>
  <Node Name="FunctionPointerParameterSyntax" Base="BaseParameterSyntax">
    <Kind Name="FunctionPointerParameter" />
    <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" />
    <Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" />
    <Field Name="Type" Type="TypeSyntax" Optional="false" Override="true" />
  </Node>
  <Node Name="IncompleteMemberSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="IncompleteMember" />n
        <Field Name="AttributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true" /><Field Name="Modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true" /><Field Name="Type" Type="TypeSyntax" Optional="true" /></Node>
  <Node Name="SkippedTokensTriviaSyntax" Base="StructuredTriviaSyntax">
    <Kind Name="SkippedTokensTrivia" />
    <Field Name="Tokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
  </Node>
  <!--
  <Node Name="BadNamespaceMemberDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="BadNamespaceMemberDeclaration"/>
    <Field Name="Nodes" Type="SyntaxNodeOrTokenList"/>
  </Node>
  -->
  <!-- Xml -->
  <Node Name="DocumentationCommentTriviaSyntax" Base="StructuredTriviaSyntax">
    <Kind Name="SingleLineDocumentationCommentTrivia" />
    <Kind Name="MultiLineDocumentationCommentTrivia" />
    <Field Name="Content" Type="SyntaxList&lt;XmlNodeSyntax&gt;" />
    <Field Name="EndOfComment" Type="SyntaxToken">
      <!-- should be renamed to EndOfCommentToken -->
      <Kind Name="EndOfDocumentationCommentToken" />
    </Field>
  </Node>
  <AbstractNode Name="CrefSyntax" Base="CSharpSyntaxNode" />
  <Node Name="TypeCrefSyntax" Base="CrefSyntax">
    <Kind Name="TypeCref" />
    <Field Name="Type" Type="TypeSyntax" />
  </Node>
  <Node Name="QualifiedCrefSyntax" Base="CrefSyntax">
    <Kind Name="QualifiedCref" />
    <Field Name="Container" Type="TypeSyntax" />
    <Field Name="DotToken" Type="SyntaxToken">
      <Kind Name="DotToken" />
    </Field>
    <Field Name="Member" Type="MemberCrefSyntax" />
  </Node>
  <AbstractNode Name="MemberCrefSyntax" Base="CrefSyntax" />
  <Node Name="NameMemberCrefSyntax" Base="MemberCrefSyntax">
    <Kind Name="NameMemberCref" />
    <Field Name="Name" Type="TypeSyntax" />
    <Field Name="Parameters" Type="CrefParameterListSyntax" Optional="true" />
  </Node>
  <Node Name="IndexerMemberCrefSyntax" Base="MemberCrefSyntax">
    <Kind Name="IndexerMemberCref" />
    <Field Name="ThisKeyword" Type="SyntaxToken">
      <Kind Name="ThisKeyword" />
    </Field>
    <Field Name="Parameters" Type="CrefBracketedParameterListSyntax" Optional="true" />
  </Node>
  <Node Name="OperatorMemberCrefSyntax" Base="MemberCrefSyntax">
    <Kind Name="OperatorMemberCref" />
    <Field Name="OperatorKeyword" Type="SyntaxToken">
      <Kind Name="OperatorKeyword" />
    </Field>
    <Field Name="OperatorToken" Type="SyntaxToken">
      <Kind Name="PlusToken" />
      <Kind Name="MinusToken" />
      <Kind Name="ExclamationToken" />
      <Kind Name="TildeToken" />
      <Kind Name="PlusPlusToken" />
      <Kind Name="MinusMinusToken" />
      <Kind Name="AsteriskToken" />
      <Kind Name="SlashToken" />
      <Kind Name="PercentToken" />
      <Kind Name="LessThanLessThanToken" />
      <Kind Name="GreaterThanGreaterThanToken" />
      <Kind Name="BarToken" />
      <Kind Name="AmpersandToken" />
      <Kind Name="CaretToken" />
      <Kind Name="EqualsEqualsToken" />
      <Kind Name="ExclamationEqualsToken" />
      <Kind Name="LessThanToken" />
      <Kind Name="LessThanEqualsToken" />
      <Kind Name="GreaterThanToken" />
      <Kind Name="GreaterThanEqualsToken" />
      <Kind Name="FalseKeyword" />
      <Kind Name="TrueKeyword" />
    </Field>
    <Field Name="Parameters" Type="CrefParameterListSyntax" Optional="true" />
  </Node>
  <Node Name="ConversionOperatorMemberCrefSyntax" Base="MemberCrefSyntax">
    <Kind Name="ConversionOperatorMemberCref" />
    <Field Name="ImplicitOrExplicitKeyword" Type="SyntaxToken">
      <Kind Name="ImplicitKeyword" />
      <Kind Name="ExplicitKeyword" />
    </Field>
    <Field Name="OperatorKeyword" Type="SyntaxToken">
      <Kind Name="OperatorKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
    <Field Name="Parameters" Type="CrefParameterListSyntax" Optional="true" />
  </Node>
  <AbstractNode Name="BaseCrefParameterListSyntax" Base="CSharpSyntaxNode">
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;CrefParameterSyntax&gt;" />
  </AbstractNode>
  <Node Name="CrefParameterListSyntax" Base="BaseCrefParameterListSyntax">
    <Kind Name="CrefParameterList" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;CrefParameterSyntax&gt;" Override="true" />
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="CrefBracketedParameterListSyntax" Base="BaseCrefParameterListSyntax">
    <Kind Name="CrefBracketedParameterList" />
    <Field Name="OpenBracketToken" Type="SyntaxToken">
      <Kind Name="OpenBracketToken" />
    </Field>
    <Field Name="Parameters" Type="SeparatedSyntaxList&lt;CrefParameterSyntax&gt;" Override="true" MinCount="1" />
    <Field Name="CloseBracketToken" Type="SyntaxToken">
      <Kind Name="CloseBracketToken" />
    </Field>
  </Node>
  <Node Name="CrefParameterSyntax" Base="CSharpSyntaxNode">
    <Kind Name="CrefParameter" />
    <Field Name="RefKindKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="RefKeyword" />
      <Kind Name="OutKeyword" />
      <Kind Name="InKeyword" />
    </Field>
    <Field Name="Type" Type="TypeSyntax" />
  </Node>
  <AbstractNode Name="XmlNodeSyntax" Base="CSharpSyntaxNode"></AbstractNode>
  <Node Name="XmlElementSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlElement" />
    <Field Name="StartTag" Type="XmlElementStartTagSyntax" />
    <Field Name="Content" Type="SyntaxList&lt;XmlNodeSyntax&gt;" />
    <Field Name="EndTag" Type="XmlElementEndTagSyntax" />
  </Node>
  <Node Name="XmlElementStartTagSyntax" Base="CSharpSyntaxNode">
    <Kind Name="XmlElementStartTag" />
    <Field Name="LessThanToken" Type="SyntaxToken">
      <Kind Name="LessThanToken" />
    </Field>
    <Field Name="Name" Type="XmlNameSyntax" />
    <Field Name="Attributes" Type="SyntaxList&lt;XmlAttributeSyntax&gt;" />
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <Kind Name="GreaterThanToken" />
    </Field>
  </Node>
  <Node Name="XmlElementEndTagSyntax" Base="CSharpSyntaxNode">
    <Kind Name="XmlElementEndTag" />
    <Field Name="LessThanSlashToken" Type="SyntaxToken">
      <Kind Name="LessThanSlashToken" />
    </Field>
    <Field Name="Name" Type="XmlNameSyntax" />
    <Field Name="GreaterThanToken" Type="SyntaxToken">
      <Kind Name="GreaterThanToken" />
    </Field>
  </Node>
  <Node Name="XmlEmptyElementSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlEmptyElement" />
    <Field Name="LessThanToken" Type="SyntaxToken">
      <Kind Name="LessThanToken" />
    </Field>
    <Field Name="Name" Type="XmlNameSyntax" />
    <Field Name="Attributes" Type="SyntaxList&lt;XmlAttributeSyntax&gt;" />
    <Field Name="SlashGreaterThanToken" Type="SyntaxToken">
      <Kind Name="SlashGreaterThanToken" />
    </Field>
  </Node>
  <Node Name="XmlNameSyntax" Base="CSharpSyntaxNode">
    <Kind Name="XmlName" />
    <Field Name="Prefix" Type="XmlPrefixSyntax" Optional="true" />
    <Field Name="LocalName" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
  </Node>
  <Node Name="XmlPrefixSyntax" Base="CSharpSyntaxNode">
    <Kind Name="XmlPrefix" />
    <Field Name="Prefix" Type="SyntaxToken">
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="ColonToken" Type="SyntaxToken">
      <Kind Name="ColonToken" />
    </Field>
  </Node>
  <AbstractNode Name="XmlAttributeSyntax" Base="CSharpSyntaxNode">
    <Field Name="Name" Type="XmlNameSyntax" />
    <Field Name="EqualsToken" Type="SyntaxToken">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="StartQuoteToken" Type="SyntaxToken">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
    <Field Name="EndQuoteToken" Type="SyntaxToken">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
  </AbstractNode>
  <Node Name="XmlTextAttributeSyntax" Base="XmlAttributeSyntax">
    <Kind Name="XmlTextAttribute" />
    <Field Name="Name" Type="XmlNameSyntax" Override="true" />
    <Field Name="EqualsToken" Type="SyntaxToken" Override="true">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="StartQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <!-- XmlTextLiteralToken or XmlEntityLiteralToken-->
    <Field Name="EndQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
  </Node>
  <Node Name="XmlCrefAttributeSyntax" Base="XmlAttributeSyntax">
    <Kind Name="XmlCrefAttribute" />
    <Field Name="Name" Type="XmlNameSyntax" Override="true" />
    <Field Name="EqualsToken" Type="SyntaxToken" Override="true">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="StartQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
    <Field Name="Cref" Type="CrefSyntax" />
    <Field Name="EndQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
  </Node>
  <Node Name="XmlNameAttributeSyntax" Base="XmlAttributeSyntax">
    <Kind Name="XmlNameAttribute" />
    <Field Name="Name" Type="XmlNameSyntax" Override="true" />
    <Field Name="EqualsToken" Type="SyntaxToken" Override="true">
      <Kind Name="EqualsToken" />
    </Field>
    <Field Name="StartQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
    <Field Name="Identifier" Type="IdentifierNameSyntax" />
    <Field Name="EndQuoteToken" Type="SyntaxToken" Override="true">
      <Kind Name="SingleQuoteToken" />
      <Kind Name="DoubleQuoteToken" />
    </Field>
  </Node>
  <Node Name="XmlTextSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlText" />
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <!-- XmlTextLiteralToken or XmlEntityLiteralToken-->
  </Node>
  <Node Name="XmlCDataSectionSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlCDataSection" />
    <Field Name="StartCDataToken" Type="SyntaxToken">
      <Kind Name="XmlCDataStartToken" />
    </Field>
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <!-- XmlTextLiteralToken only -->
    <Field Name="EndCDataToken" Type="SyntaxToken">
      <Kind Name="XmlCDataEndToken" />
    </Field>
  </Node>
  <Node Name="XmlProcessingInstructionSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlProcessingInstruction" />
    <Field Name="StartProcessingInstructionToken" Type="SyntaxToken">
      <Kind Name="XmlProcessingInstructionStartToken" />
    </Field>
    <Field Name="Name" Type="XmlNameSyntax" />
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <!-- XmlTextLiteralToken only -->
    <Field Name="EndProcessingInstructionToken" Type="SyntaxToken">
      <Kind Name="XmlProcessingInstructionEndToken" />
    </Field>
  </Node>
  <Node Name="XmlCommentSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlComment" />
    <Field Name="LessThanExclamationMinusMinusToken" Type="SyntaxToken">
      <Kind Name="XmlCommentStartToken" />
    </Field>
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;" />
    <!-- XmlTextLiteralToken only -->
    <Field Name="MinusMinusGreaterThanToken" Type="SyntaxToken">
      <Kind Name="XmlCommentEndToken" />
    </Field>
  </Node>
  <!--
  <Node Name="XmlProcessingInstructionSyntax" Base="XmlNodeSyntax">
    <Kind Name="XmlProcessingInstruction"/>
    <Field Name="LessThanQuestionToken" Type="SyntaxToken"/>
    <Field Name="TextTokens" Type="SyntaxList&lt;SyntaxToken&gt;"/>
    <Field Name="QuestionGreaterThanToken" Type="SyntaxToken"/>
  </Node>
  -->
  <!-- Preprocessor -->
  <AbstractNode Name="DirectiveTriviaSyntax" Base="StructuredTriviaSyntax">
    <Field Name="IsActive" Type="bool" />
    <Field Name="HashToken" Type="SyntaxToken">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
  </AbstractNode>
  <AbstractNode Name="BranchingDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Field Name="BranchTaken" Type="bool" />
  </AbstractNode>
  <AbstractNode Name="ConditionalDirectiveTriviaSyntax" Base="BranchingDirectiveTriviaSyntax">
    <Field Name="Condition" Type="ExpressionSyntax" />
    <Field Name="ConditionValue" Type="bool" />
  </AbstractNode>
  <Node Name="IfDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <Kind Name="IfDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="IfKeyword" Type="SyntaxToken">
      <Kind Name="IfKeyword" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" Override="true" />
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
    <Field Name="BranchTaken" Type="bool" Override="true" />
    <Field Name="ConditionValue" Type="bool" Override="true" />
  </Node>
  <Node Name="ElifDirectiveTriviaSyntax" Base="ConditionalDirectiveTriviaSyntax">
    <Kind Name="ElifDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="ElifKeyword" Type="SyntaxToken">
      <Kind Name="ElifKeyword" />
    </Field>
    <Field Name="Condition" Type="ExpressionSyntax" Override="true" />
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
    <Field Name="BranchTaken" Type="bool" Override="true" />
    <Field Name="ConditionValue" Type="bool" Override="true" />
  </Node>
  <Node Name="ElseDirectiveTriviaSyntax" Base="BranchingDirectiveTriviaSyntax">
    <Kind Name="ElseDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="ElseKeyword" Type="SyntaxToken">
      <Kind Name="ElseKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
    <Field Name="BranchTaken" Type="bool" Override="true" />
  </Node>
  <Node Name="EndIfDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="EndIfDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="EndIfKeyword" Type="SyntaxToken">
      <Kind Name="EndIfKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="RegionDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="RegionDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="RegionKeyword" Type="SyntaxToken">
      <Kind Name="RegionKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="EndRegionDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="EndRegionDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="EndRegionKeyword" Type="SyntaxToken">
      <Kind Name="EndRegionKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="ErrorDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="ErrorDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="ErrorKeyword" Type="SyntaxToken">
      <Kind Name="ErrorKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="WarningDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="WarningDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="WarningKeyword" Type="SyntaxToken">
      <Kind Name="WarningKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="BadDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="BadDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="Identifier" Type="SyntaxToken" />
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="DefineDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="DefineDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="DefineKeyword" Type="SyntaxToken">
      <Kind Name="DefineKeyword" />
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <!-- should be identifier -->
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="UndefDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="UndefDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="UndefKeyword" Type="SyntaxToken">
      <Kind Name="UndefKeyword" />
    </Field>
    <Field Name="Name" Type="SyntaxToken">
      <!-- should be identifier -->
      <Kind Name="IdentifierToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <AbstractNode Name="LineOrSpanDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Field Name="LineKeyword" Type="SyntaxToken" />
    <Field Name="File" Type="SyntaxToken" Optional="true" />
  </AbstractNode>
  <Node Name="LineDirectiveTriviaSyntax" Base="LineOrSpanDirectiveTriviaSyntax">
    <Kind Name="LineDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="LineKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="LineKeyword" />
    </Field>
    <Field Name="Line" Type="SyntaxToken">
      <Kind Name="NumericLiteralToken" />
      <Kind Name="DefaultKeyword" />
      <Kind Name="HiddenKeyword" />
    </Field>
    <Field Name="File" Type="SyntaxToken" Optional="true" Override="true">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="LineDirectivePositionSyntax" Base="CSharpSyntaxNode">
    <Kind Name="LineDirectivePosition" />
    <Field Name="OpenParenToken" Type="SyntaxToken">
      <Kind Name="OpenParenToken" />
    </Field>
    <Field Name="Line" Type="SyntaxToken">
      <Kind Name="NumericLiteralToken" />
    </Field>
    <Field Name="CommaToken" Type="SyntaxToken">
      <Kind Name="CommaToken" />
    </Field>
    <Field Name="Character" Type="SyntaxToken">
      <Kind Name="NumericLiteralToken" />
    </Field>
    <Field Name="CloseParenToken" Type="SyntaxToken">
      <Kind Name="CloseParenToken" />
    </Field>
  </Node>
  <Node Name="LineSpanDirectiveTriviaSyntax" Base="LineOrSpanDirectiveTriviaSyntax">
    <Kind Name="LineSpanDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="LineKeyword" Type="SyntaxToken" Override="true">
      <Kind Name="LineKeyword" />
    </Field>
    <Field Name="Start" Type="LineDirectivePositionSyntax" />
    <Field Name="MinusToken" Type="SyntaxToken">
      <Kind Name="MinusToken" />
    </Field>
    <Field Name="End" Type="LineDirectivePositionSyntax" />
    <Field Name="CharacterOffset" Type="SyntaxToken" Optional="true">
      <Kind Name="NumericLiteralToken" />
    </Field>
    <Field Name="File" Type="SyntaxToken" Override="true">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="PragmaWarningDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="PragmaWarningDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="PragmaKeyword" Type="SyntaxToken">
      <Kind Name="PragmaKeyword" />
    </Field>
    <Field Name="WarningKeyword" Type="SyntaxToken">
      <Kind Name="WarningKeyword" />
    </Field>
    <Field Name="DisableOrRestoreKeyword" Type="SyntaxToken">
      <Kind Name="DisableKeyword" />
      <Kind Name="RestoreKeyword" />
    </Field>
    <Field Name="ErrorCodes" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;" />
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="PragmaChecksumDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="PragmaChecksumDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="PragmaKeyword" Type="SyntaxToken">
      <Kind Name="PragmaKeyword" />
    </Field>
    <Field Name="ChecksumKeyword" Type="SyntaxToken">
      <Kind Name="ChecksumKeyword" />
    </Field>
    <Field Name="File" Type="SyntaxToken">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="Guid" Type="SyntaxToken">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="Bytes" Type="SyntaxToken">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="ReferenceDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="ReferenceDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="ReferenceKeyword" Type="SyntaxToken">
      <Kind Name="ReferenceKeyword" />
    </Field>
    <Field Name="File" Type="SyntaxToken">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="LoadDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="LoadDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="LoadKeyword" Type="SyntaxToken">
      <Kind Name="LoadKeyword" />
    </Field>
    <Field Name="File" Type="SyntaxToken">
      <Kind Name="StringLiteralToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="ShebangDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="ShebangDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="ExclamationToken" Type="SyntaxToken">
      <Kind Name="ExclamationToken" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
  <Node Name="NullableDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="NullableDirectiveTrivia" />
    <Field Name="HashToken" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="NullableKeyword" Type="SyntaxToken">
      <Kind Name="NullableKeyword" />
    </Field>
    <Field Name="SettingToken" Type="SyntaxToken">
      <Kind Name="EnableKeyword" />
      <Kind Name="DisableKeyword" />
      <Kind Name="RestoreKeyword" />
    </Field>
    <Field Name="TargetToken" Type="SyntaxToken" Optional="true">
      <Kind Name="WarningsKeyword" />
      <Kind Name="AnnotationsKeyword" />
    </Field>
    <Field Name="EndOfDirectiveToken" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
    <Field Name="IsActive" Type="bool" Override="true" />
  </Node>
</Tree>