<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CaravelaCompilerDisablePackCustomization>True</CaravelaCompilerDisablePackCustomization>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\IsExternalInit.cs" Link="IsExternalInit.cs" />
    
    <!-- We have to embed the netstandard2.0 build of Caravela.Framework so we can reference it to create
         the compile-time assembly. See ReferenceAssemblyLocator                                           -->
    <EmbeddedResource Include="$(OutputPath)..\netstandard2.0\Caravela.Framework.dll">
        <LogicalName>Caravela.Framework.dll</LogicalName>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
	  <!-- We cannot use InternalsVisibleTo for Caravela.TestFramework because of obfuscation in the release build. -->
    <InternalsVisibleTo Include="Caravela.Framework.Tests.UnitTests" />
    <InternalsVisibleTo Include="Caravela.Framework.Tests.InternalPipeline" />
    <InternalsVisibleTo Include="Caravela.Framework.CompilerAddIn" />
    </ItemGroup>
    
   <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(RoslynVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="$(RoslynVersion)" />
    <PackageReference Include="Caravela.Compiler.Sdk" Version="$(CaravelaCompilerVersion)" />
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="$(MicrosoftBclHashCodeVersion)" />
    <PackageReference Include="K4os.Hash.xxHash" Version="$(K4osHashxxHashVersion)" />
    <PackageReference Include="Microsoft.CSharp" Version="$(MicrosoftCSharpVersion)" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="System.Reflection.MetadataLoadContext" Version="$(SystemReflectionMetadataLoadContextVersion)" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
    <ProjectReference Include="..\Caravela.Framework.DesignTime.Contracts\Caravela.Framework.DesignTime.Contracts.csproj" />
    <ProjectReference Include="..\Caravela.Framework\Caravela.Framework.csproj" />
    <ProjectReference Include="..\Caravela.Framework.Sdk\Caravela.Framework.Sdk.csproj" />
    <ProjectReference Include="..\Build\Caravela.MemoTransformer\Caravela.MemoTransformer.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    
    <!-- Reference PostSharp for obfuscation -->
    <PackageReference Include="PostSharp" Version="$(PostSharpPackageVersion)" PrivateAssets="all" Condition="'$(Obfuscate)' == 'True'" />
    <ProjectReference Include="..\Build\Caravela.Obfuscator\Caravela.Obfuscator.csproj" ReferenceOutputAssembly="false" Condition="'$(Obfuscate)' == 'True'" />
    
    <!-- Reference Caravela.Compiler for [Memo] -->
    <PackageReference Include="Caravela.Compiler" Version="$(CaravelaCompilerVersion)" PrivateAssets="all" />
    
  </ItemGroup>
  
  <!-- Obfuscation -->
  <PropertyGroup>
    <PostSharpProperties>
      ObfuscateMapFile=$(OutputPath)\$(TargetFramework)\$(AssemblyName).obmap;
      ObfuscateRootPath=$(MSBuildThisFileDirectory)
    </PostSharpProperties>
    <PostSharpSearchPath>$(OutputPath)\netstandard2.0</PostSharpSearchPath>
  </PropertyGroup>

  <Target Name="NoPackWithoutObfuscate" BeforeTargets="Pack">
    <Error Condition="'$(Configuration)' == 'Release' AND '$(Obfuscate)' != 'True'" Text="Not allowed to create Release package without obfuscation, use '-p:Obfuscate=True'." />
  </Target>
  
 <PropertyGroup>
   <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CustomContentTarget</TargetsForTfmSpecificContentInPackage>
 </PropertyGroup>
 
 <Target Name="CustomContentTarget">
   <ItemGroup>
<!--     <TfmSpecificPackageFile Remove="abc.txt">-->
<!--       <PackagePath>mycontent/$(TargetFramework)</PackagePath>-->
<!--     </TfmSpecificPackageFile>-->
<!--     <TfmSpecificPackageFile Include="Extensions/ext.txt" Condition="'$(TargetFramework)' == 'net46'">-->
<!--       <PackagePath>net46content</PackagePath>-->
<!--     </TfmSpecificPackageFile>  -->
   </ItemGroup>
 </Target>  

</Project>
