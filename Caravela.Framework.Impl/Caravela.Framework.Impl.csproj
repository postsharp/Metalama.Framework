<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CaravelaCompilerDisablePackCustomization>True</CaravelaCompilerDisablePackCustomization>
    <UseCaravelaCompiler>Private</UseCaravelaCompiler>
  </PropertyGroup>

  <ItemGroup>
    
    <!-- We have to embed the compile-time build of Caravela.Framework so we can reference it to create
         the compile-time assembly. See ReferenceAssemblyLocator                                           -->
    <EmbeddedResource Include="..\Caravela.Framework.CompileTime\bin\$(Configuration)\netstandard2.0\Caravela.Framework.dll">
        <LogicalName>Caravela.Framework.dll</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Remove="ServiceProvider\**" />
  </ItemGroup>

  <ItemGroup>
	  <!-- We cannot use InternalsVisibleTo for Caravela.TestFramework because of obfuscation in the release build. -->
    <InternalsVisibleTo Include="Caravela.Framework.Tests.UnitTests.Internals" />
    <InternalsVisibleTo Include="Caravela.Framework.Tests.Integration.Internals" />
    <InternalsVisibleTo Include="Caravela.Framework.CompilerAddIn" />
    <InternalsVisibleTo Include="Caravela.Framework.Workspaces" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(FakeItEasyKey)" LoadsWithinVisualStudio="false" />
    </ItemGroup>
    
   <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(RoslynVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="$(RoslynVersion)" />
    <PackageReference Include="Caravela.Compiler.Sdk" Version="$(CaravelaCompilerVersion)" />
    
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="$(MicrosoftBclHashCodeVersion)" />
    <PackageReference Include="K4os.Hash.xxHash" Version="$(K4osHashxxHashVersion)" />
    <PackageReference Include="Microsoft.CSharp" Version="$(MicrosoftCSharpVersion)" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
    <ProjectReference Include="..\Caravela.Framework.DesignTime.Contracts\Caravela.Framework.DesignTime.Contracts.csproj" />
    <ProjectReference Include="..\Caravela.Framework\Caravela.Framework.csproj" />
    <ProjectReference Include="..\Caravela.Framework.Sdk\Caravela.Framework.Sdk.csproj" />
    
    <!-- Reference PostSharp for obfuscation -->
    <PackageReference Include="PostSharp" Version="$(PostSharpPackageVersion)" PrivateAssets="all" Condition="'$(Obfuscate)' == 'True'" />
    <ProjectReference Include="..\Build\Caravela.Obfuscator\Caravela.Obfuscator.csproj" ReferenceOutputAssembly="false" Condition="'$(Obfuscate)' == 'True'" />
    
    <!-- The following references handle [Memo] -->
    <ProjectReference Include="..\Build\Caravela.SourceTransformer\Caravela.SourceTransformer.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    
    
    <!-- Caravela.RoslynUtilities is embedded in the current package to having to publish Caravela.RoslynUtilities as public package
         (which would be usable from the current project anyway.
          
         We use an assembly alias to avoid conflicts with nullable attribute classes,
       -->
    <PackageReference Include="Caravela.RoslynUtilities" Version="$(CaravelaCompilerVersion)" PrivateAssets="all" Aliases="roslyn">
            <GeneratePathProperty>true</GeneratePathProperty>
     </PackageReference>
     <None Include="$(PkgCaravela_RoslynUtilities)\lib\netstandard2.0\Caravela.RoslynUtilities.dll" Pack="true" PackagePath="lib\netstandard2.0" CopyToOutputDirectory="Always" />
    
  </ItemGroup>
    
   <ItemGroup>
     <Compile Include="..\IsExternalInit.cs">
       <Link>SystemTypes\IsExternalInit.cs</Link>
     </Compile>
     <Compile Remove="ServiceProvider\**" />
     <Compile Remove="CodeModel\Builders\BuiltGenericParameter.cs" />
   </ItemGroup>
    
   <ItemGroup>
     <None Remove="ServiceProvider\**" />
   </ItemGroup>
  
  <!-- Obfuscation -->
  <PropertyGroup>
    <PostSharpProperties>
      ObfuscateMapFile=$(MSBuildThisFileDirectory)\bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).obmap;
      ObfuscateRootPath=$(MSBuildThisFileDirectory)
    </PostSharpProperties>
    <PostSharpSearchPath>$(MSBuildThisFileDirectory)..\Build\Caravela.Obfuscator\bin\$(Configuration)\netstandard2.0</PostSharpSearchPath>
    <PostSharpDisabledMessages>PS0131</PostSharpDisabledMessages>
  </PropertyGroup>

  <Target Name="NoPackWithoutObfuscate" BeforeTargets="Pack">
    <Error Condition="'$(Configuration)' == 'Release' AND '$(Obfuscate)' != 'True'" Text="Not allowed to create Release package without obfuscation, use '-p:Obfuscate=True'." />
  </Target>

</Project>
