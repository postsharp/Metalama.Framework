<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>9</LangVersion>
    <Nullable>enable</Nullable>
    <PackageId>Caravela.Framework</PackageId>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\IsExternalInit.cs" Link="IsExternalInit.cs" />

    <None Include="build\Caravela.Framework.targets" Pack="true" PackagePath="build" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Caravela.Framework.Impl.UnitTests" />
    
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(RoslynVersion)" PrivateAssets="all" />
    <PackageReference Include="Caravela.Compiler.Sdk" Version="$(CaravelaCompilerVersion)" />
    <PackageReference Include="Caravela.Compiler" Version="$(CaravelaCompilerVersion)" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="System.Reflection.MetadataLoadContext" Version="4.7.2" PrivateAssets="all" GeneratePathProperty="true" />
    <None Include="$(PkgSystem_Reflection_MetadataLoadContext)\lib\netstandard2.0\System.Reflection.MetadataLoadContext.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />

    <ProjectReference Include="..\Caravela.Framework\Caravela.Framework.csproj" />
    <ProjectReference Include="..\Caravela.Framework.Sdk\Caravela.Framework.Sdk.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\Caravela.MemoTransformer\Caravela.MemoTransformer.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\Caravela.Reactive\Caravela.Reactive.csproj" PrivateAssets="all" />
  </ItemGroup>
  
  <!-- based on https://stackoverflow.com/a/56018426/41071 --> 
  <Target Name="SetPackageContent" AfterTargets="CaravelaCompilerSetLibAssembliesInPackage">
    <ItemGroup>
      <!-- remove everything from lib -->
      <BuildOutputInPackage Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>
  
  <Target Name="WritePackageVersions" BeforeTargets="BeforeBuild" DependsOnTargets="RunResolvePackageDependencies">
    <ItemGroup>
      <PackageVersions Include="@(PackageDefinitions)" DotlessName="$([System.String]::Copy('%(Name)').Replace('.', ''))" Condition="%(Name) == 'Microsoft.CSharp' or %(Name) == 'Microsoft.CodeAnalysis.CSharp' or %(Name) == 'Caravela.Compiler' or %(Name) == 'Caravela.Compiler.Sdk'" />
    </ItemGroup>
    
    <PropertyGroup>
      <PackageVersionsCode>
        <![CDATA[
namespace Caravela.Framework.Impl.CompileTime
{
    static class PackageVersions
    {
        @(PackageVersions->'public const string %(DotlessName)Version = "%(Version)"%3B', '%0D%0A        ')
    }
}
        ]]>
      </PackageVersionsCode>
    </PropertyGroup>
    
    <WriteLinesToFile File="CompileTime/PackageVersions.g.cs" Overwrite="true" WriteOnlyWhenDifferent="true" Lines="$(PackageVersionsCode)" />
  </Target>

  <PropertyGroup>
    <Obfuscate Condition="'$(Obfuscate)' == '' AND '$(Configuration)'=='Release'">True</Obfuscate>
    <PostSharpProperties>
      ObfuscateMapFile=$(OutputPath)\$(TargetFramework)\$(AssemblyName).obmap;
      ObfuscateRootPath=$(MSBuildThisFileDirectory)
    </PostSharpProperties>
    <PostSharpSearchPath>$(OutputPath)\netstandard2.0</PostSharpSearchPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="PostSharp" Version="$(PostSharpPackageVersion)" PrivateAssets="all" Condition="'$(Obfuscate)' == 'True'" />
    <ProjectReference Include="..\Caravela.Obfuscator\Caravela.Obfuscator.csproj" ReferenceOutputAssembly="false" Condition="'$(Obfuscate)' == 'True'" />
  </ItemGroup>

</Project>
