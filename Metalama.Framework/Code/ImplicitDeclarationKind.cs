// Copyright (c) SharpCrafters s.r.o. See the LICENSE.md file in the root directory of this repository root for details.

namespace Metalama.Framework.Code;

/// <summary>
/// Enumerates the kinds of implicit declarations. This property is exposed by the <see cref="IDeclaration.ImplicitDeclarationKind"/> property of the <see cref="IDeclaration"/> interface
/// and is meaningful when the <see cref="IDeclaration.IsImplicitlyDeclared"/> property is <c>true</c>.
/// </summary>
public enum ImplicitDeclarationKind
{
    /// <summary>
    /// The declaration is explicitly declared in source code.
    /// </summary>
    None,

    /// <summary>
    /// The implicit default, parameterless, constructor.
    /// </summary>
    DefaultConstructor,

    /// <summary>
    /// A property, method or constructor generated by the <c>record</c> type, such as <c>ToString</c> or <c>Equals</c>.
    /// </summary>
    RecordPlumbing,

    /// <summary>
    /// The implicit property setter that can be used only from the constructor.
    /// </summary>
    ConstructorOnlySetter,

    /// <summary>
    /// A parameter of an implicit method or property. See the <see cref="IDeclaration.ImplicitDeclarationKind"/> of the parent member.
    /// </summary>
    ParameterOfImplicitMember,

    /// <summary>
    /// A pseudo-method that represents the field getter in Metalama, but has no equivalent in C#.
    /// </summary>
    FieldGetter,

    /// <summary>
    /// A pseudo-method that represents the field setter in Metalama, but has no equivalent in C#.
    /// </summary>
    FieldSetter,

    /// <summary>
    /// A pseudo-method that represents the event raiser in Metalama, but has no equivalent in C#.
    /// </summary>
    EventRaiser,

    /// <summary>
    /// Another or unknown kind of implicit declaration.
    /// </summary>
    Other
}