<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- Prevent Metalama.TestFramework.props to generate the attribute that ignores the test framework -->
        <MetalamaTestReplaceFramework Condition="'$(Obfuscate)'=='True'">False</MetalamaTestReplaceFramework>
    </PropertyGroup>

    <Import Project="..\..\Metalama.TestFramework\Metalama.TestFramework.props" />
    <Import Project="..\..\eng\Coverage.props" />

    <PropertyGroup>
        <TargetFrameworks>netframework4.8;net6.0</TargetFrameworks>
        <LangVersion>9.0</LangVersion>
        <IsPackable>false</IsPackable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <MetalamaTestAutoExclude>False</MetalamaTestAutoExclude>
        <MetalamaTestGenerateDefaultRunner>False</MetalamaTestGenerateDefaultRunner>
        <RootNamespace>Metalama.Framework.Tests.Integration</RootNamespace>
    </PropertyGroup>

    <ItemGroup>
        <!-- Exclude files that intentionally do not compile -->
        <Compile Remove="Tests\**\__*.cs" />
        <None Include="Tests\**\__*.cs" />
        <Compile Remove="Tests\Templating\Syntax\ObjectInitializer\NeutralObjectInitializers_RunTime.t.cs" />
        <None Include="Tests\Templating\Syntax\ObjectInitializer\CompileTimeObjectInitializers.t.cs" />
        <None Include="Tests\Templating\Syntax\ObjectInitializer\NeutralObjectInitializers_RunTime.t.cs" />
    </ItemGroup>
  
    <ItemGroup>
        <PackageReference Include="FakeItEasy" Version="6.2.1" />
        <PackageReference Include="FakeItEasy.Analyzer.CSharp" Version="6.0.0" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftNETTestSdkVersion)" />
        <PackageReference Include="xunit" Version="$(xUnitVersion)" />
        <PackageReference Include="xunit.runner.visualstudio" Version="$(xUnitVersion)" />
        <PackageReference Include="Metalama.Compiler.Sdk" Version="$(MetalamaCompilerVersion)" />

        <!-- This is used for a test -->
        <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
    </ItemGroup>

    <!-- Enable dynamic file nesting. See https://github.com/dotnet/project-system/issues/3242#issuecomment-453995460 -->
    <ItemGroup>
        <ProjectCapability Include="DynamicDependentFile" />
        <ProjectCapability Include="DynamicFileNesting" />

        <!-- In Visual Studio, you should define a nesting profile with the following content:
        
            {
                "help": "https://go.microsoft.com/fwlink/?linkid=866610",
                "dependentFileProviders": {
                    "add": {
                        "extensionToExtension": {
                            "add": {
                                ".t.cs": [ ".cs" ],
                                ".cs.html": [ ".cs" ]
                            }
                        }
                    }
                }
            }
            
            In Rider, go to the wheel icon of the Solution Explorer and choose File Nesting.
        
        -->
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\Metalama.Framework.Engine\Metalama.Framework.Engine.csproj" />
        <ProjectReference Include="..\..\Metalama.Framework\Metalama.Framework.csproj" />
        <ProjectReference Include="..\..\Metalama.TestFramework\Metalama.TestFramework.csproj" />
    </ItemGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="Metalama.AspectWorkbench" />
        <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(FakeItEasyKey)" LoadsWithinVisualStudio="false" />
    </ItemGroup>

    <Import Project="..\..\Metalama.TestFramework\Metalama.TestFramework.targets" />

    <!-- Ignore project if the build is obfuscated because this project relies on obfuscated internals -->
    <ItemGroup Condition="'$(Obfuscate)'=='True'">
        <Compile Remove="**\*" />
    </ItemGroup>
    <ItemGroup>
      <None Update="C:\src\Metalama\Tests\Metalama.Framework.Tests.Integration.Internals\Tests\Templating\Syntax\ObjectInitializer\With_Error.t.cs">
        <DependentUpon>With_Error.cs</DependentUpon>
      </None>
    </ItemGroup>

</Project>
