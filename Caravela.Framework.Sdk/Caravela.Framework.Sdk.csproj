<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <PackageDescription>
      PostSharp project "Caravela" SDK. A tool for custom source code modifying extensions using the Roslyn API. More powerful than source generators.
    </PackageDescription>
    <RootNamespace>Caravela.Framework.Impl</RootNamespace>
    <!-- This is to prevent the Caravela.Compiler.Sdk package to change our nuspec --> 
    <CaravelaCompilerDisablePackCustomization>True</CaravelaCompilerDisablePackCustomization>
    
  </PropertyGroup>

  <ItemGroup>
    <None Include="build\Caravela.Framework.Sdk.targets" Pack="true" PackagePath="buildTransitive" />
    <None Include="build\Caravela.Framework.Sdk.props" Pack="true" PackagePath="buildTransitive" />

    <InternalsVisibleTo Include="Caravela.Framework.Impl" />
    <InternalsVisibleTo Include="Caravela.Framework.Tests.UnitTests.Internals" />
    <InternalsVisibleTo Include="Caravela.Framework.Tests.Integration.Internals" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(FakeItEasyKey)" LoadsWithinVisualStudio="false" />
        
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(RoslynVersion)" />
    <PackageReference Include="Caravela.Compiler.Sdk" Version="$(CaravelaCompilerVersion)" />
    
    <!-- We don't want Caravela to customize the build of SDK projects, so we have to list private assets.
         Note that this is not sufficient because SDK projects will likely transitively import Caravela.Framework,
         so we have the CaravelaCompileTimeOnlyProject property defined in Caravela.Framework.Sdk.props.
     -->
    <ProjectReference Include="..\Caravela.Framework\Caravela.Framework.csproj" PrivateAssets="Analyzers;Build;BuildTransitive" />
    
  </ItemGroup>

</Project>
