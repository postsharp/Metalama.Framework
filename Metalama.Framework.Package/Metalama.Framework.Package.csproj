<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        
        <!-- Packaging -->
        <PackageId>Metalama.Framework</PackageId>
        <PackageDescription>Metalama. A tool for aspect-oriented programming (AOP) using templates written in pure C#.</PackageDescription>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddAnalyzersToOutput</TargetsForTfmSpecificContentInPackage>
        
        <!-- If the build is deterministic, we can have the error : SourceRoot items must include at least one top-level (not nested) item when DeterministicSourcePaths is true -->
        <Deterministic>False</Deterministic>

        <!-- Disable a warning saying that we have nothing under the lib folder. -->
        <NoWarn>NU5128</NoWarn>

        <UseMetalamaCompiler>Public</UseMetalamaCompiler>
        
        <!-- Disable the customization done by Metalama.Compiler.Sdk -->
        <MetalamaCompilerDisablePackCustomization>True</MetalamaCompilerDisablePackCustomization>
    </PropertyGroup>

    <ItemGroup>
      <None Update="Metalama.Framework.props">
        <Pack>true</Pack>
        <PackagePath>buildTransitive</PackagePath>
      </None>
      <None Update="Metalama.Framework.targets">
        <Pack>true</Pack>
        <PackagePath>buildTransitive</PackagePath>
      </None>
      <None Update="Metalama.CompilerVisibleProperties.props">
        <Pack>true</Pack>
        <PackagePath>buildTransitive</PackagePath>
      </None>
    </ItemGroup>
    
    <ItemGroup>
    		<ProjectReference Include="..\Metalama.Framework.CompilerExtensions.CodeFixes\Metalama.Framework.CompilerExtensions.CodeFixes.csproj" PrivateAssets="all" />
    		<ProjectReference Include="..\Metalama.Framework.CompilerExtensions\Metalama.Framework.CompilerExtensions.csproj" PrivateAssets="all" />
    		
            <!-- Adding PrivateAssets="none" here below is important otherwise PrivateAssets="all" will be transitively inherited from the ProjectReference above -->

    		<ProjectReference Include="..\Metalama.Framework\Metalama.Framework.csproj" PrivateAssets="none" />
    		
    		<PackageReference Include="Microsoft.CSharp" Version="$(MicrosoftCSharpVersion)" PrivateAssets="none" />
</ItemGroup>
    
    
    
    <Target Name="_AddAnalyzersToOutput">
    		<ItemGroup>
    			<TfmSpecificPackageFile Include="$(OutputPath)\Metalama.Framework.CompilerExtensions.dll" PackagePath="analyzers/dotnet/cs" />
    			<TfmSpecificPackageFile Include="$(OutputPath)\Metalama.Framework.CompilerExtensions.CodeFixes.dll" PackagePath="analyzers/dotnet/cs" />
    		</ItemGroup>
    	</Target>

	
	<Target Name="SetPackageContent" AfterTargets="MetalamaCompilerSetLibAssembliesInPackage">
		<ItemGroup>
			<!-- remove everything from lib -->
			<BuildOutputInPackage Remove="@(BuildOutputInPackage)" />
			<!-- TODO doc xml files are still included -->
		</ItemGroup>
	</Target>

</Project>
