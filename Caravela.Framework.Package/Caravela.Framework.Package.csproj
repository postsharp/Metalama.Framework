<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        
        		<!-- Packaging -->
        		<PackageId>Caravela.Framework</PackageId>
        		<PackageDescription>PostSharp project "Caravela". A tool for aspect-oriented programming (AOP) using templates written in pure C#.</PackageDescription>
        		<IncludeBuildOutput>false</IncludeBuildOutput>
        		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddAnalyzersToOutput</TargetsForTfmSpecificContentInPackage>
    </PropertyGroup>

    <ItemGroup>
      <None Update="Caravela.Framework.targets">
        <Pack>true</Pack>
        <PackagePath>build</PackagePath>
      </None>
      <None Update="Caravela.CompilerVisibleProperties.targets">
        <Pack>true</Pack>
        <PackagePath>build</PackagePath>
      </None>
    </ItemGroup>
    
    <ItemGroup>
    	<!-- The dependency to the public assembly is a public one. This dependency needs to be repeated even if it is added
               transitively by Caravela.Framework.Impl because we add Caravela.Framework.Impl privately-->
    		<ProjectReference Include="..\Caravela.Framework.CompilerExtensions.CodeFixes\Caravela.Framework.CompilerExtensions.CodeFixes.csproj" PrivateAssets="all" />
    		<ProjectReference Include="..\Caravela.Framework.CompilerExtensions\Caravela.Framework.CompilerExtensions.csproj" PrivateAssets="all" />
    		<ProjectReference Include="..\Caravela.Framework\Caravela.Framework.csproj" />
    		
    
    		<PackageReference Include="Microsoft.CSharp" Version="$(MicrosoftCSharpVersion)" />
    		<PackageReference Include="Caravela.Compiler" Version="$(CaravelaCompilerVersion)" />
</ItemGroup>
    
    
    
    <Target Name="_AddAnalyzersToOutput">
    		<ItemGroup>
    			<TfmSpecificPackageFile Include="$(OutputPath)\Caravela.Framework.CompilerExtensions.dll" PackagePath="analyzers/dotnet/cs" />
    			<TfmSpecificPackageFile Include="$(OutputPath)\Caravela.Framework.CompilerExtensions.CodeFixes.dll" PackagePath="analyzers/dotnet/cs" />
    		</ItemGroup>
    	</Target>

	
	<Target Name="SetPackageContent" AfterTargets="CaravelaCompilerSetLibAssembliesInPackage">
		<ItemGroup>
			<!-- remove everything from lib -->
			<BuildOutputInPackage Remove="@(BuildOutputInPackage)" />
			<!-- TODO doc xml files are still included -->
		</ItemGroup>
	</Target>

</Project>
