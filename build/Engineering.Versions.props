<Project>

    <!-- LocalBuildId.props is created by CreateLocalPackages.ps1. It is used on development environments only (not on build servers) -->
    <Import Project="LocalBuildId.props" Condition="Exists('LocalBuildId.props')" />

    <!-- To create a development release build, define the properties Configuration=Release and UseLocalBuildId=True -->

    <PropertyGroup>
        <UseLocalBuildId Condition="'$(UseLocalBuildId)'=='' AND ('$(Configuration)'!='Release' AND '$(VersionSuffix)'=='')">True</UseLocalBuildId>
    </PropertyGroup>

    <!-- The version for the release build is set manually. -->
    <PropertyGroup Condition="'$(Configuration)'=='Release' AND '$(UseLocalBuildId)'!='True'">
        <ProductVersion Condition="'$(Configuration)'=='Release' AND '$(ProductMaturity)'!=''">$(ProductMainVersion)-$(ProductMaturity)</ProductVersion>
    </PropertyGroup>

    <!-- For TeamCity debug builds, the version number is based on the TeamCity build number. 
         TeamCity is responsible for setting the VersionSuffix property -->
    <PropertyGroup Condition="'$(Configuration)'!='Release' AND '$(VersionSuffix)'!=''">
        <ProductVersion>$(ProductMainVersion)-build-$(VersionSuffix)</ProductVersion>
        <ProductAssemblyVersion>$(ProductMainVersion).$(VersionSuffix)</ProductAssemblyVersion>
    </PropertyGroup>

    <!-- For local builds, the LocalBuildId property must be defined before calling `dotnet pack` -->
    <PropertyGroup Condition="'$(UseLocalBuildId)'=='True'">
        <LocalBuildId Condition="'$(LocalBuildId)'==''">LocalBuildIdUndefined</LocalBuildId>
        <ProductVersion>$(ProductMainVersion)-$(LocalBuildId)</ProductVersion>
        <ProductAssemblyVersion>$(ProductMainVersion)$([System.DateTime]::Now.ToString('MMdd.HHmm'))</ProductAssemblyVersion>
    </PropertyGroup>

    <PropertyGroup>
        <Version>$(ProductVersion)</Version>
        <AssemblyVersion>$(ProductAssemblyVersion)</AssemblyVersion>
    </PropertyGroup>

    <Target Name="PrintVersion">
        <Message Text="ProductVersion=$(ProductVersion);ProductAssemblyVersion=$(ProductAssemblyVersion)" />
    </Target>

    <!-- Emits an error if `dotnet pack` is called in a local debug build, but Run CreateLocalPackages.ps1 has not been called. -->
    <Target Name="ValidateVersion" BeforeTargets="Pack">
        <Error Text="The LocalBuildId property is not defined. Run CreateLocalPackages.ps1"
               Condition="'$(LocalBuildId)'=='LocalBuildIdUndefined'" />
    </Target>

</Project>